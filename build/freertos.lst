ARM GAS  /tmp/ccZ7FFfO.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"freertos.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.StartDefaultTask,"ax",%progbits
  20              		.align	1
  21              		.global	StartDefaultTask
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	StartDefaultTask:
  27              	.LVL0:
  28              	.LFB139:
  29              		.file 1 "Core/Src/freertos.c"
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/freertos.c ****   * in the root directory of this software component.
  14:Core/Src/freertos.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/freertos.c ****   *
  16:Core/Src/freertos.c ****   ******************************************************************************
  17:Core/Src/freertos.c ****   */
  18:Core/Src/freertos.c **** /* USER CODE END Header */
  19:Core/Src/freertos.c **** 
  20:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/freertos.c **** #include "FreeRTOS.h"
  22:Core/Src/freertos.c **** #include "task.h"
  23:Core/Src/freertos.c **** #include "main.h"
  24:Core/Src/freertos.c **** #include "cmsis_os.h"
  25:Core/Src/freertos.c **** 
  26:Core/Src/freertos.c **** #include "uros_tasks.h"
  27:Core/Src/freertos.c **** #include "error_indicator.h"
  28:Core/Src/freertos.c **** 
  29:Core/Src/freertos.c **** 
ARM GAS  /tmp/ccZ7FFfO.s 			page 2


  30:Core/Src/freertos.c **** 
  31:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  32:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  33:Core/Src/freertos.c **** 
  34:Core/Src/freertos.c **** /* USER CODE END Includes */
  35:Core/Src/freertos.c **** 
  36:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  37:Core/Src/freertos.c **** typedef StaticTask_t osStaticThreadDef_t;
  38:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  39:Core/Src/freertos.c **** 
  40:Core/Src/freertos.c **** /* USER CODE END PTD */
  41:Core/Src/freertos.c **** 
  42:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  43:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  44:Core/Src/freertos.c **** 
  45:Core/Src/freertos.c **** /* USER CODE END PD */
  46:Core/Src/freertos.c **** 
  47:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  48:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  49:Core/Src/freertos.c **** 
  50:Core/Src/freertos.c **** /* USER CODE END PM */
  51:Core/Src/freertos.c **** 
  52:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  53:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  54:Core/Src/freertos.c **** 
  55:Core/Src/freertos.c **** /* USER CODE END Variables */
  56:Core/Src/freertos.c **** /* Definitions for defaultTask */
  57:Core/Src/freertos.c **** osThreadId_t defaultTaskHandle;
  58:Core/Src/freertos.c **** uint32_t defaultTaskBuffer[ 3000 ];
  59:Core/Src/freertos.c **** osStaticThreadDef_t defaultTaskControlBlock;
  60:Core/Src/freertos.c **** const osThreadAttr_t defaultTask_attributes = {
  61:Core/Src/freertos.c ****   .name = "defaultTask",
  62:Core/Src/freertos.c ****   .cb_mem = &defaultTaskControlBlock,
  63:Core/Src/freertos.c ****   .cb_size = sizeof(defaultTaskControlBlock),
  64:Core/Src/freertos.c ****   .stack_mem = &defaultTaskBuffer[0],
  65:Core/Src/freertos.c ****   .stack_size = sizeof(defaultTaskBuffer),
  66:Core/Src/freertos.c ****   .priority = (osPriority_t) osPriorityHigh2,
  67:Core/Src/freertos.c **** };
  68:Core/Src/freertos.c **** 
  69:Core/Src/freertos.c **** 
  70:Core/Src/freertos.c **** /* Definitions for errorIndicatorTask */
  71:Core/Src/freertos.c **** osThreadId_t errorIndicatorTaskHandle;
  72:Core/Src/freertos.c **** const osThreadAttr_t errorIndicatorTask_attributes = {
  73:Core/Src/freertos.c ****   .name = "errorIndicatorTask",
  74:Core/Src/freertos.c ****   .stack_size = 128 * 4,
  75:Core/Src/freertos.c ****   .priority = (osPriority_t) osPriorityNormal,
  76:Core/Src/freertos.c **** };
  77:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  78:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  79:Core/Src/freertos.c **** 
  80:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  81:Core/Src/freertos.c **** 
  82:Core/Src/freertos.c **** void StartDefaultTask(void *argument);
  83:Core/Src/freertos.c **** void StartErrorIndicatorTask(void *argument);
  84:Core/Src/freertos.c **** 
  85:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
  86:Core/Src/freertos.c **** 
ARM GAS  /tmp/ccZ7FFfO.s 			page 3


  87:Core/Src/freertos.c **** /**
  88:Core/Src/freertos.c ****   * @brief  FreeRTOS initialization
  89:Core/Src/freertos.c ****   * @param  None
  90:Core/Src/freertos.c ****   * @retval None
  91:Core/Src/freertos.c ****   */
  92:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
  93:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
  94:Core/Src/freertos.c **** 
  95:Core/Src/freertos.c ****   /* USER CODE END Init */
  96:Core/Src/freertos.c **** 
  97:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
  98:Core/Src/freertos.c ****   /* add mutexes, ... */
  99:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
 100:Core/Src/freertos.c **** 
 101:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 102:Core/Src/freertos.c ****   /* add semaphores, ... */
 103:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
 104:Core/Src/freertos.c **** 
 105:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 106:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
 107:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 108:Core/Src/freertos.c **** 
 109:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 110:Core/Src/freertos.c ****   /* add queues, ... */
 111:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 112:Core/Src/freertos.c **** 
 113:Core/Src/freertos.c ****   /* Create the thread(s) */
 114:Core/Src/freertos.c ****   /* creation of defaultTask */
 115:Core/Src/freertos.c ****   defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 116:Core/Src/freertos.c ****   errorIndicatorTaskHandle = osThreadNew(StartErrorIndicatorTask, NULL, &errorIndicatorTask_attribu
 117:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 118:Core/Src/freertos.c ****   /* add threads, ... */
 119:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 120:Core/Src/freertos.c **** 
 121:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_EVENTS */
 122:Core/Src/freertos.c ****   /* add events, ... */
 123:Core/Src/freertos.c ****   /* USER CODE END RTOS_EVENTS */
 124:Core/Src/freertos.c **** 
 125:Core/Src/freertos.c **** }
 126:Core/Src/freertos.c **** 
 127:Core/Src/freertos.c **** 
 128:Core/Src/freertos.c **** /* USER CODE END Header_StartDefaultTask */
 129:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 130:Core/Src/freertos.c **** /**
 131:Core/Src/freertos.c ****   * @brief  Function implementing the defaultTask thread.
 132:Core/Src/freertos.c ****   * @param  argument: Not used
 133:Core/Src/freertos.c ****   * @retval None
 134:Core/Src/freertos.c ****   */
 135:Core/Src/freertos.c **** /* USER CODE END Header_StartDefaultTask */
 136:Core/Src/freertos.c **** void StartDefaultTask(void *argument)
 137:Core/Src/freertos.c **** {
  30              		.loc 1 137 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 137 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccZ7FFfO.s 			page 4


  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
 138:Core/Src/freertos.c ****   /* USER CODE BEGIN 5 */
 139:Core/Src/freertos.c **** 
 140:Core/Src/freertos.c ****   // micro-ROS configuration
 141:Core/Src/freertos.c **** 
 142:Core/Src/freertos.c ****   init_uros_node();  
  40              		.loc 1 142 3 is_stmt 1 view .LVU2
  41 0002 FFF7FEFF 		bl	init_uros_node
  42              	.LVL1:
 143:Core/Src/freertos.c ****   spin_uros_node(0);
  43              		.loc 1 143 3 view .LVU3
  44 0006 0020     		movs	r0, #0
  45 0008 FFF7FEFF 		bl	spin_uros_node
  46              	.LVL2:
 144:Core/Src/freertos.c ****   
 145:Core/Src/freertos.c ****   /* USER CODE END 5 */
 146:Core/Src/freertos.c **** }
  47              		.loc 1 146 1 is_stmt 0 view .LVU4
  48 000c 08BD     		pop	{r3, pc}
  49              		.cfi_endproc
  50              	.LFE139:
  52              		.section	.text.StartErrorIndicatorTask,"ax",%progbits
  53              		.align	1
  54              		.global	StartErrorIndicatorTask
  55              		.syntax unified
  56              		.thumb
  57              		.thumb_func
  59              	StartErrorIndicatorTask:
  60              	.LVL3:
  61              	.LFB140:
 147:Core/Src/freertos.c **** 
 148:Core/Src/freertos.c **** void StartErrorIndicatorTask(void *argument)
 149:Core/Src/freertos.c **** {
  62              		.loc 1 149 1 is_stmt 1 view -0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              		.loc 1 149 1 is_stmt 0 view .LVU6
  67 0000 08B5     		push	{r3, lr}
  68              	.LCFI1:
  69              		.cfi_def_cfa_offset 8
  70              		.cfi_offset 3, -8
  71              		.cfi_offset 14, -4
 150:Core/Src/freertos.c ****   /* USER CODE BEGIN 5 */
 151:Core/Src/freertos.c **** 
 152:Core/Src/freertos.c ****   // micro-ROS configuration
 153:Core/Src/freertos.c **** 
 154:Core/Src/freertos.c ****   error_indicator();
  72              		.loc 1 154 3 is_stmt 1 view .LVU7
  73 0002 FFF7FEFF 		bl	error_indicator
  74              	.LVL4:
 155:Core/Src/freertos.c ****   
 156:Core/Src/freertos.c ****   /* USER CODE END 5 */
 157:Core/Src/freertos.c **** }
ARM GAS  /tmp/ccZ7FFfO.s 			page 5


  75              		.loc 1 157 1 is_stmt 0 view .LVU8
  76 0006 08BD     		pop	{r3, pc}
  77              		.cfi_endproc
  78              	.LFE140:
  80              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
  81              		.align	1
  82              		.global	MX_FREERTOS_Init
  83              		.syntax unified
  84              		.thumb
  85              		.thumb_func
  87              	MX_FREERTOS_Init:
  88              	.LFB138:
  92:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
  89              		.loc 1 92 29 is_stmt 1 view -0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93 0000 08B5     		push	{r3, lr}
  94              	.LCFI2:
  95              		.cfi_def_cfa_offset 8
  96              		.cfi_offset 3, -8
  97              		.cfi_offset 14, -4
 115:Core/Src/freertos.c ****   errorIndicatorTaskHandle = osThreadNew(StartErrorIndicatorTask, NULL, &errorIndicatorTask_attribu
  98              		.loc 1 115 3 view .LVU10
 115:Core/Src/freertos.c ****   errorIndicatorTaskHandle = osThreadNew(StartErrorIndicatorTask, NULL, &errorIndicatorTask_attribu
  99              		.loc 1 115 23 is_stmt 0 view .LVU11
 100 0002 074A     		ldr	r2, .L7
 101 0004 0021     		movs	r1, #0
 102 0006 0748     		ldr	r0, .L7+4
 103 0008 FFF7FEFF 		bl	osThreadNew
 104              	.LVL5:
 115:Core/Src/freertos.c ****   errorIndicatorTaskHandle = osThreadNew(StartErrorIndicatorTask, NULL, &errorIndicatorTask_attribu
 105              		.loc 1 115 21 view .LVU12
 106 000c 064B     		ldr	r3, .L7+8
 107 000e 1860     		str	r0, [r3]
 116:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 108              		.loc 1 116 3 is_stmt 1 view .LVU13
 116:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 109              		.loc 1 116 30 is_stmt 0 view .LVU14
 110 0010 064A     		ldr	r2, .L7+12
 111 0012 0021     		movs	r1, #0
 112 0014 0648     		ldr	r0, .L7+16
 113 0016 FFF7FEFF 		bl	osThreadNew
 114              	.LVL6:
 116:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 115              		.loc 1 116 28 view .LVU15
 116 001a 064B     		ldr	r3, .L7+20
 117 001c 1860     		str	r0, [r3]
 125:Core/Src/freertos.c **** 
 118              		.loc 1 125 1 view .LVU16
 119 001e 08BD     		pop	{r3, pc}
 120              	.L8:
 121              		.align	2
 122              	.L7:
 123 0020 00000000 		.word	.LANCHOR0
 124 0024 00000000 		.word	StartDefaultTask
 125 0028 00000000 		.word	.LANCHOR1
ARM GAS  /tmp/ccZ7FFfO.s 			page 6


 126 002c 00000000 		.word	.LANCHOR2
 127 0030 00000000 		.word	StartErrorIndicatorTask
 128 0034 00000000 		.word	.LANCHOR3
 129              		.cfi_endproc
 130              	.LFE138:
 132              		.global	errorIndicatorTask_attributes
 133              		.section	.rodata.str1.4,"aMS",%progbits,1
 134              		.align	2
 135              	.LC0:
 136 0000 6572726F 		.ascii	"errorIndicatorTask\000"
 136      72496E64 
 136      69636174 
 136      6F725461 
 136      736B00
 137              		.global	errorIndicatorTaskHandle
 138              		.global	defaultTask_attributes
 139 0013 00       		.align	2
 140              	.LC1:
 141 0014 64656661 		.ascii	"defaultTask\000"
 141      756C7454 
 141      61736B00 
 142              		.global	defaultTaskControlBlock
 143              		.global	defaultTaskBuffer
 144              		.global	defaultTaskHandle
 145              		.section	.bss.defaultTaskBuffer,"aw",%nobits
 146              		.align	2
 149              	defaultTaskBuffer:
 150 0000 00000000 		.space	12000
 150      00000000 
 150      00000000 
 150      00000000 
 150      00000000 
 151              		.section	.bss.defaultTaskControlBlock,"aw",%nobits
 152              		.align	2
 155              	defaultTaskControlBlock:
 156 0000 00000000 		.space	92
 156      00000000 
 156      00000000 
 156      00000000 
 156      00000000 
 157              		.section	.bss.defaultTaskHandle,"aw",%nobits
 158              		.align	2
 159              		.set	.LANCHOR1,. + 0
 162              	defaultTaskHandle:
 163 0000 00000000 		.space	4
 164              		.section	.bss.errorIndicatorTaskHandle,"aw",%nobits
 165              		.align	2
 166              		.set	.LANCHOR3,. + 0
 169              	errorIndicatorTaskHandle:
 170 0000 00000000 		.space	4
 171              		.section	.rodata.defaultTask_attributes,"a"
 172              		.align	2
 173              		.set	.LANCHOR0,. + 0
 176              	defaultTask_attributes:
 177 0000 14000000 		.word	.LC1
 178 0004 00000000 		.space	4
 179 0008 00000000 		.word	defaultTaskControlBlock
ARM GAS  /tmp/ccZ7FFfO.s 			page 7


 180 000c 5C000000 		.word	92
 181 0010 00000000 		.word	defaultTaskBuffer
 182 0014 E02E0000 		.word	12000
 183 0018 2A000000 		.word	42
 184 001c 00000000 		.space	8
 184      00000000 
 185              		.section	.rodata.errorIndicatorTask_attributes,"a"
 186              		.align	2
 187              		.set	.LANCHOR2,. + 0
 190              	errorIndicatorTask_attributes:
 191 0000 00000000 		.word	.LC0
 192 0004 00000000 		.space	16
 192      00000000 
 192      00000000 
 192      00000000 
 193 0014 00020000 		.word	512
 194 0018 18000000 		.word	24
 195 001c 00000000 		.space	8
 195      00000000 
 196              		.text
 197              	.Letext0:
 198              		.file 2 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 199              		.file 3 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 200              		.file 4 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 201              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 202              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 203              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 204              		.file 8 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rmw/type
 205              		.file 9 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rmw/qos_
 206              		.file 10 "App/Inc/error_indicator.h"
 207              		.file 11 "App/Inc/uros_tasks.h"
ARM GAS  /tmp/ccZ7FFfO.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
     /tmp/ccZ7FFfO.s:20     .text.StartDefaultTask:0000000000000000 $t
     /tmp/ccZ7FFfO.s:26     .text.StartDefaultTask:0000000000000000 StartDefaultTask
     /tmp/ccZ7FFfO.s:53     .text.StartErrorIndicatorTask:0000000000000000 $t
     /tmp/ccZ7FFfO.s:59     .text.StartErrorIndicatorTask:0000000000000000 StartErrorIndicatorTask
     /tmp/ccZ7FFfO.s:81     .text.MX_FREERTOS_Init:0000000000000000 $t
     /tmp/ccZ7FFfO.s:87     .text.MX_FREERTOS_Init:0000000000000000 MX_FREERTOS_Init
     /tmp/ccZ7FFfO.s:123    .text.MX_FREERTOS_Init:0000000000000020 $d
     /tmp/ccZ7FFfO.s:190    .rodata.errorIndicatorTask_attributes:0000000000000000 errorIndicatorTask_attributes
     /tmp/ccZ7FFfO.s:134    .rodata.str1.4:0000000000000000 $d
     /tmp/ccZ7FFfO.s:169    .bss.errorIndicatorTaskHandle:0000000000000000 errorIndicatorTaskHandle
     /tmp/ccZ7FFfO.s:176    .rodata.defaultTask_attributes:0000000000000000 defaultTask_attributes
     /tmp/ccZ7FFfO.s:155    .bss.defaultTaskControlBlock:0000000000000000 defaultTaskControlBlock
     /tmp/ccZ7FFfO.s:149    .bss.defaultTaskBuffer:0000000000000000 defaultTaskBuffer
     /tmp/ccZ7FFfO.s:162    .bss.defaultTaskHandle:0000000000000000 defaultTaskHandle
     /tmp/ccZ7FFfO.s:146    .bss.defaultTaskBuffer:0000000000000000 $d
     /tmp/ccZ7FFfO.s:152    .bss.defaultTaskControlBlock:0000000000000000 $d
     /tmp/ccZ7FFfO.s:158    .bss.defaultTaskHandle:0000000000000000 $d
     /tmp/ccZ7FFfO.s:165    .bss.errorIndicatorTaskHandle:0000000000000000 $d
     /tmp/ccZ7FFfO.s:172    .rodata.defaultTask_attributes:0000000000000000 $d
     /tmp/ccZ7FFfO.s:186    .rodata.errorIndicatorTask_attributes:0000000000000000 $d

UNDEFINED SYMBOLS
init_uros_node
spin_uros_node
error_indicator
osThreadNew
