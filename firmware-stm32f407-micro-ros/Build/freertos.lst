ARM GAS  /tmp/ccV6lX8j.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"freertos.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.StartDefaultTask,"ax",%progbits
  20              		.align	1
  21              		.global	StartDefaultTask
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	StartDefaultTask:
  27              	.LFB139:
  28              		.file 1 "Core/Src/freertos.c"
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/freertos.c ****   * in the root directory of this software component.
  14:Core/Src/freertos.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/freertos.c ****   *
  16:Core/Src/freertos.c ****   ******************************************************************************
  17:Core/Src/freertos.c ****   */
  18:Core/Src/freertos.c **** /* USER CODE END Header */
  19:Core/Src/freertos.c **** 
  20:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/freertos.c **** #include "FreeRTOS.h"
  22:Core/Src/freertos.c **** #include "task.h"
  23:Core/Src/freertos.c **** #include "main.h"
  24:Core/Src/freertos.c **** #include "cmsis_os.h"
  25:Core/Src/freertos.c **** 
  26:Core/Src/freertos.c **** 
  27:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/freertos.c **** #include "stm32f4xx_ll_usb.h"
  30:Core/Src/freertos.c **** #include "can.h"
ARM GAS  /tmp/ccV6lX8j.s 			page 2


  31:Core/Src/freertos.c **** #include "usart.h"
  32:Core/Src/freertos.c **** 
  33:Core/Src/freertos.c **** #include "hyperdog_uros_app.h"
  34:Core/Src/freertos.c **** #include "error_indicator.h"
  35:Core/Src/freertos.c **** #include "minicheetah_motor.h"
  36:Core/Src/freertos.c **** /* USER CODE END Includes */
  37:Core/Src/freertos.c **** 
  38:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  39:Core/Src/freertos.c **** typedef StaticTask_t osStaticThreadDef_t;
  40:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  41:Core/Src/freertos.c **** HAL_StatusTypeDef can_status;
  42:Core/Src/freertos.c **** // Motor_TypeDef motor[NUM_OF_MOTORS];
  43:Core/Src/freertos.c **** // uint16_t motor_error_code;
  44:Core/Src/freertos.c **** // uint8_t motor_status;
  45:Core/Src/freertos.c **** /* USER CODE END PTD */
  46:Core/Src/freertos.c **** 
  47:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  48:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  49:Core/Src/freertos.c **** 
  50:Core/Src/freertos.c **** /* USER CODE END PD */
  51:Core/Src/freertos.c **** 
  52:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  53:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  54:Core/Src/freertos.c **** 
  55:Core/Src/freertos.c **** /* USER CODE END PM */
  56:Core/Src/freertos.c **** 
  57:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  58:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  59:Core/Src/freertos.c **** 
  60:Core/Src/freertos.c **** /* USER CODE END Variables */
  61:Core/Src/freertos.c **** /* Definitions for defaultTask */
  62:Core/Src/freertos.c **** osThreadId_t defaultTaskHandle;
  63:Core/Src/freertos.c **** uint32_t defaultTaskBuffer[ 3000 ];
  64:Core/Src/freertos.c **** osStaticThreadDef_t defaultTaskControlBlock;
  65:Core/Src/freertos.c **** const osThreadAttr_t defaultTask_attributes = {
  66:Core/Src/freertos.c ****   .name = "defaultTask",
  67:Core/Src/freertos.c ****   .cb_mem = &defaultTaskControlBlock,
  68:Core/Src/freertos.c ****   .cb_size = sizeof(defaultTaskControlBlock),
  69:Core/Src/freertos.c ****   .stack_mem = &defaultTaskBuffer[0],
  70:Core/Src/freertos.c ****   .stack_size = sizeof(defaultTaskBuffer),
  71:Core/Src/freertos.c ****   .priority = (osPriority_t) osPriorityHigh2,
  72:Core/Src/freertos.c **** };
  73:Core/Src/freertos.c **** 
  74:Core/Src/freertos.c **** 
  75:Core/Src/freertos.c **** /* Definitions for errorIndicatorTask */
  76:Core/Src/freertos.c **** osThreadId_t errorIndicatorTaskHandle;
  77:Core/Src/freertos.c **** const osThreadAttr_t errorIndicatorTask_attributes = {
  78:Core/Src/freertos.c ****   .name = "errorIndicatorTask",
  79:Core/Src/freertos.c ****   .stack_size = 128 * 4,
  80:Core/Src/freertos.c ****   .priority = (osPriority_t) osPriorityNormal,
  81:Core/Src/freertos.c **** };
  82:Core/Src/freertos.c **** 
  83:Core/Src/freertos.c **** 
  84:Core/Src/freertos.c **** /* Definitions for CAN */
  85:Core/Src/freertos.c **** osThreadId_t CANTaskHandle;
  86:Core/Src/freertos.c **** const osThreadAttr_t CANTask_attributes = {
  87:Core/Src/freertos.c ****   .name = "canTask",
ARM GAS  /tmp/ccV6lX8j.s 			page 3


  88:Core/Src/freertos.c ****   .stack_size = 128 * 4,
  89:Core/Src/freertos.c ****   .priority = (osPriority_t) osPriorityHigh1,
  90:Core/Src/freertos.c **** };
  91:Core/Src/freertos.c **** 
  92:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  93:Core/Src/freertos.c **** 
  94:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  95:Core/Src/freertos.c **** void StartErrorIndicatorTask(void *argument);
  96:Core/Src/freertos.c **** void StartCANTask(void* argument);
  97:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  98:Core/Src/freertos.c **** 
  99:Core/Src/freertos.c **** void StartDefaultTask(void *argument);
 100:Core/Src/freertos.c **** 
 101:Core/Src/freertos.c **** 
 102:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
 103:Core/Src/freertos.c **** 
 104:Core/Src/freertos.c **** /**
 105:Core/Src/freertos.c ****   * @brief  FreeRTOS initialization
 106:Core/Src/freertos.c ****   * @param  None
 107:Core/Src/freertos.c ****   * @retval None
 108:Core/Src/freertos.c ****   */
 109:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
 110:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 111:Core/Src/freertos.c **** 
 112:Core/Src/freertos.c ****   /* USER CODE END Init */
 113:Core/Src/freertos.c **** 
 114:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 115:Core/Src/freertos.c ****   /* add mutexes, ... */
 116:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
 117:Core/Src/freertos.c **** 
 118:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 119:Core/Src/freertos.c ****   /* add semaphores, ... */
 120:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
 121:Core/Src/freertos.c **** 
 122:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 123:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
 124:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 125:Core/Src/freertos.c **** 
 126:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 127:Core/Src/freertos.c ****   /* add queues, ... */
 128:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 129:Core/Src/freertos.c **** 
 130:Core/Src/freertos.c ****   /* Create the thread(s) */
 131:Core/Src/freertos.c ****   /* creation of defaultTask */
 132:Core/Src/freertos.c ****   defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 133:Core/Src/freertos.c **** 
 134:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 135:Core/Src/freertos.c ****   errorIndicatorTaskHandle = osThreadNew(StartErrorIndicatorTask, NULL, &errorIndicatorTask_attribu
 136:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 137:Core/Src/freertos.c **** 
 138:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_EVENTS */
 139:Core/Src/freertos.c ****   CANTaskHandle = osThreadNew(StartCANTask, NULL, &CANTask_attributes);
 140:Core/Src/freertos.c ****   /* USER CODE END RTOS_EVENTS */
 141:Core/Src/freertos.c **** 
 142:Core/Src/freertos.c **** }
 143:Core/Src/freertos.c **** 
 144:Core/Src/freertos.c **** 
ARM GAS  /tmp/ccV6lX8j.s 			page 4


 145:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 146:Core/Src/freertos.c **** /**
 147:Core/Src/freertos.c ****   * @brief  Function implementing the defaultTask thread: Micro-ROS.
 148:Core/Src/freertos.c ****   * @param  argument: Not used
 149:Core/Src/freertos.c ****   * @retval None
 150:Core/Src/freertos.c ****   */
 151:Core/Src/freertos.c **** void StartDefaultTask(void *argument)
 152:Core/Src/freertos.c **** {
  29              		.loc 1 152 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              	.LVL0:
  34              		.loc 1 152 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
  40 0002 02E0     		b	.L2
  41              	.LVL1:
  42              	.L3:
 153:Core/Src/freertos.c ****   /* USER CODE BEGIN 5 */
 154:Core/Src/freertos.c **** 
 155:Core/Src/freertos.c ****   // micro-ROS configuration
 156:Core/Src/freertos.c **** 
 157:Core/Src/freertos.c ****   // init_uros_node();  
 158:Core/Src/freertos.c ****   // spin_uros_node(2);
 159:Core/Src/freertos.c ****   a:
 160:Core/Src/freertos.c ****   if(initMicroROS(&huart2)){
 161:Core/Src/freertos.c ****     init_hyperdog_node();
 162:Core/Src/freertos.c ****     spin_hyperdog_node();
 163:Core/Src/freertos.c ****   }
 164:Core/Src/freertos.c ****   else{
 165:Core/Src/freertos.c ****     osDelay(100);
  43              		.loc 1 165 5 is_stmt 1 view .LVU2
  44 0004 6420     		movs	r0, #100
  45 0006 FFF7FEFF 		bl	osDelay
  46              	.LVL2:
 166:Core/Src/freertos.c ****     goto a;
  47              		.loc 1 166 5 view .LVU3
  48              	.L2:
 160:Core/Src/freertos.c ****     init_hyperdog_node();
  49              		.loc 1 160 3 view .LVU4
 160:Core/Src/freertos.c ****     init_hyperdog_node();
  50              		.loc 1 160 6 is_stmt 0 view .LVU5
  51 000a 0548     		ldr	r0, .L6
  52 000c FFF7FEFF 		bl	initMicroROS
  53              	.LVL3:
 160:Core/Src/freertos.c ****     init_hyperdog_node();
  54              		.loc 1 160 5 view .LVU6
  55 0010 0028     		cmp	r0, #0
  56 0012 F7D0     		beq	.L3
  57              	.LBB2:
 161:Core/Src/freertos.c ****     spin_hyperdog_node();
  58              		.loc 1 161 5 is_stmt 1 view .LVU7
  59 0014 FFF7FEFF 		bl	init_hyperdog_node
ARM GAS  /tmp/ccV6lX8j.s 			page 5


  60              	.LVL4:
 162:Core/Src/freertos.c ****   }
  61              		.loc 1 162 5 view .LVU8
  62 0018 FFF7FEFF 		bl	spin_hyperdog_node
  63              	.LVL5:
  64              	.LBE2:
 167:Core/Src/freertos.c ****   }
 168:Core/Src/freertos.c ****   
 169:Core/Src/freertos.c ****   /* USER CODE END 5 */
 170:Core/Src/freertos.c **** }
  65              		.loc 1 170 1 is_stmt 0 view .LVU9
  66 001c 08BD     		pop	{r3, pc}
  67              	.L7:
  68 001e 00BF     		.align	2
  69              	.L6:
  70 0020 00000000 		.word	huart2
  71              		.cfi_endproc
  72              	.LFE139:
  74              		.section	.text.StartErrorIndicatorTask,"ax",%progbits
  75              		.align	1
  76              		.global	StartErrorIndicatorTask
  77              		.syntax unified
  78              		.thumb
  79              		.thumb_func
  81              	StartErrorIndicatorTask:
  82              	.LVL6:
  83              	.LFB140:
 171:Core/Src/freertos.c **** /* USER CODE END Header_StartDefaultTask */
 172:Core/Src/freertos.c **** 
 173:Core/Src/freertos.c **** 
 174:Core/Src/freertos.c **** /* Private application code --------------------------------------------------*/
 175:Core/Src/freertos.c **** /* USER CODE BEGIN Application */
 176:Core/Src/freertos.c **** 
 177:Core/Src/freertos.c **** 
 178:Core/Src/freertos.c **** void StartErrorIndicatorTask(void *argument)
 179:Core/Src/freertos.c **** {
  84              		.loc 1 179 1 is_stmt 1 view -0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
  88              		.loc 1 179 1 is_stmt 0 view .LVU11
  89 0000 08B5     		push	{r3, lr}
  90              	.LCFI1:
  91              		.cfi_def_cfa_offset 8
  92              		.cfi_offset 3, -8
  93              		.cfi_offset 14, -4
 180:Core/Src/freertos.c ****   /* USER CODE BEGIN 6 */
 181:Core/Src/freertos.c ****   error_indicator();
  94              		.loc 1 181 3 is_stmt 1 view .LVU12
  95 0002 FFF7FEFF 		bl	error_indicator
  96              	.LVL7:
 182:Core/Src/freertos.c ****   /* USER CODE END 6 */
 183:Core/Src/freertos.c **** }
  97              		.loc 1 183 1 is_stmt 0 view .LVU13
  98 0006 08BD     		pop	{r3, pc}
  99              		.cfi_endproc
 100              	.LFE140:
ARM GAS  /tmp/ccV6lX8j.s 			page 6


 102              		.section	.text.StartCANTask,"ax",%progbits
 103              		.align	1
 104              		.global	StartCANTask
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 109              	StartCANTask:
 110              	.LVL8:
 111              	.LFB141:
 184:Core/Src/freertos.c **** 
 185:Core/Src/freertos.c **** void StartCANTask(void* argument)
 186:Core/Src/freertos.c **** {
 112              		.loc 1 186 1 is_stmt 1 view -0
 113              		.cfi_startproc
 114              		@ Volatile: function does not return.
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              		.loc 1 186 1 is_stmt 0 view .LVU15
 118 0000 08B5     		push	{r3, lr}
 119              	.LCFI2:
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 3, -8
 122              		.cfi_offset 14, -4
 187:Core/Src/freertos.c **** 
 188:Core/Src/freertos.c ****   MOTOR_initId(FR_HIP, 1);
 123              		.loc 1 188 3 is_stmt 1 view .LVU16
 124 0002 0121     		movs	r1, #1
 125 0004 0020     		movs	r0, #0
 126              	.LVL9:
 127              		.loc 1 188 3 is_stmt 0 view .LVU17
 128 0006 FFF7FEFF 		bl	MOTOR_initId
 129              	.LVL10:
 189:Core/Src/freertos.c ****   MOTOR_initParams(FR_HIP, 12.5, 60, 500, 5, 18, 40);
 130              		.loc 1 189 3 is_stmt 1 view .LVU18
 131 000a DFED132A 		vldr.32	s5, .L13
 132 000e B3EE022A 		vmov.f32	s4, #1.8e+1
 133 0012 F1EE041A 		vmov.f32	s3, #5.0e+0
 134 0016 9FED111A 		vldr.32	s2, .L13+4
 135 001a DFED110A 		vldr.32	s1, .L13+8
 136 001e B2EE090A 		vmov.f32	s0, #1.25e+1
 137 0022 0020     		movs	r0, #0
 138 0024 FFF7FEFF 		bl	MOTOR_initParams
 139              	.LVL11:
 190:Core/Src/freertos.c ****   MOTOR_initCtrlLimits(FR_HIP, 1.2, -1.0, 3.0, 15);
 140              		.loc 1 190 3 view .LVU19
 141 0028 F2EE0E1A 		vmov.f32	s3, #1.5e+1
 142 002c B0EE081A 		vmov.f32	s2, #3.0e+0
 143 0030 FFEE000A 		vmov.f32	s1, #-1.0e+0
 144 0034 9FED0B0A 		vldr.32	s0, .L13+12
 145 0038 0020     		movs	r0, #0
 146 003a FFF7FEFF 		bl	MOTOR_initCtrlLimits
 147              	.LVL12:
 191:Core/Src/freertos.c ****   MOTOR_initCANConfig(FR_HIP, &hcan1, 0);
 148              		.loc 1 191 3 view .LVU20
 149 003e 0022     		movs	r2, #0
 150 0040 0949     		ldr	r1, .L13+16
 151 0042 1046     		mov	r0, r2
ARM GAS  /tmp/ccV6lX8j.s 			page 7


 152 0044 FFF7FEFF 		bl	MOTOR_initCANConfig
 153              	.LVL13:
 154              	.L11:
 192:Core/Src/freertos.c ****   // MOTOR_sendHeatbeat(FR_HIP);
 193:Core/Src/freertos.c ****   // can_rx_init();
 194:Core/Src/freertos.c ****   // can_tx_init();
 195:Core/Src/freertos.c ****   
 196:Core/Src/freertos.c ****   while(1){
 155              		.loc 1 196 3 discriminator 1 view .LVU21
 197:Core/Src/freertos.c ****       // send_can_test();
 198:Core/Src/freertos.c ****       // MOTOR_sendHeatbeat(FR_HIP);
 199:Core/Src/freertos.c ****       MOTOR_enable(FR_HIP);
 156              		.loc 1 199 7 discriminator 1 view .LVU22
 157 0048 0020     		movs	r0, #0
 158 004a FFF7FEFF 		bl	MOTOR_enable
 159              	.LVL14:
 200:Core/Src/freertos.c ****       osDelay(10);
 160              		.loc 1 200 7 discriminator 1 view .LVU23
 161 004e 0A20     		movs	r0, #10
 162 0050 FFF7FEFF 		bl	osDelay
 163              	.LVL15:
 196:Core/Src/freertos.c ****       // send_can_test();
 164              		.loc 1 196 8 discriminator 1 view .LVU24
 165 0054 F8E7     		b	.L11
 166              	.L14:
 167 0056 00BF     		.align	2
 168              	.L13:
 169 0058 00002042 		.word	1109393408
 170 005c 0000FA43 		.word	1140457472
 171 0060 00007042 		.word	1114636288
 172 0064 9A99993F 		.word	1067030938
 173 0068 00000000 		.word	hcan1
 174              		.cfi_endproc
 175              	.LFE141:
 177              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
 178              		.align	1
 179              		.global	MX_FREERTOS_Init
 180              		.syntax unified
 181              		.thumb
 182              		.thumb_func
 184              	MX_FREERTOS_Init:
 185              	.LFB138:
 109:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 186              		.loc 1 109 29 view -0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190 0000 08B5     		push	{r3, lr}
 191              	.LCFI3:
 192              		.cfi_def_cfa_offset 8
 193              		.cfi_offset 3, -8
 194              		.cfi_offset 14, -4
 132:Core/Src/freertos.c **** 
 195              		.loc 1 132 3 view .LVU26
 132:Core/Src/freertos.c **** 
 196              		.loc 1 132 23 is_stmt 0 view .LVU27
 197 0002 0B4A     		ldr	r2, .L17
ARM GAS  /tmp/ccV6lX8j.s 			page 8


 198 0004 0021     		movs	r1, #0
 199 0006 0B48     		ldr	r0, .L17+4
 200 0008 FFF7FEFF 		bl	osThreadNew
 201              	.LVL16:
 132:Core/Src/freertos.c **** 
 202              		.loc 1 132 21 view .LVU28
 203 000c 0A4B     		ldr	r3, .L17+8
 204 000e 1860     		str	r0, [r3]
 135:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 205              		.loc 1 135 3 is_stmt 1 view .LVU29
 135:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 206              		.loc 1 135 30 is_stmt 0 view .LVU30
 207 0010 0A4A     		ldr	r2, .L17+12
 208 0012 0021     		movs	r1, #0
 209 0014 0A48     		ldr	r0, .L17+16
 210 0016 FFF7FEFF 		bl	osThreadNew
 211              	.LVL17:
 135:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 212              		.loc 1 135 28 view .LVU31
 213 001a 0A4B     		ldr	r3, .L17+20
 214 001c 1860     		str	r0, [r3]
 139:Core/Src/freertos.c ****   /* USER CODE END RTOS_EVENTS */
 215              		.loc 1 139 3 is_stmt 1 view .LVU32
 139:Core/Src/freertos.c ****   /* USER CODE END RTOS_EVENTS */
 216              		.loc 1 139 19 is_stmt 0 view .LVU33
 217 001e 0A4A     		ldr	r2, .L17+24
 218 0020 0021     		movs	r1, #0
 219 0022 0A48     		ldr	r0, .L17+28
 220 0024 FFF7FEFF 		bl	osThreadNew
 221              	.LVL18:
 139:Core/Src/freertos.c ****   /* USER CODE END RTOS_EVENTS */
 222              		.loc 1 139 17 view .LVU34
 223 0028 094B     		ldr	r3, .L17+32
 224 002a 1860     		str	r0, [r3]
 142:Core/Src/freertos.c **** 
 225              		.loc 1 142 1 view .LVU35
 226 002c 08BD     		pop	{r3, pc}
 227              	.L18:
 228 002e 00BF     		.align	2
 229              	.L17:
 230 0030 00000000 		.word	.LANCHOR0
 231 0034 00000000 		.word	StartDefaultTask
 232 0038 00000000 		.word	.LANCHOR1
 233 003c 00000000 		.word	.LANCHOR2
 234 0040 00000000 		.word	StartErrorIndicatorTask
 235 0044 00000000 		.word	.LANCHOR3
 236 0048 00000000 		.word	.LANCHOR4
 237 004c 00000000 		.word	StartCANTask
 238 0050 00000000 		.word	.LANCHOR5
 239              		.cfi_endproc
 240              	.LFE138:
 242              		.global	CANTask_attributes
 243              		.section	.rodata.str1.4,"aMS",%progbits,1
 244              		.align	2
 245              	.LC0:
 246 0000 63616E54 		.ascii	"canTask\000"
 246      61736B00 
ARM GAS  /tmp/ccV6lX8j.s 			page 9


 247              		.global	CANTaskHandle
 248              		.global	errorIndicatorTask_attributes
 249              		.align	2
 250              	.LC1:
 251 0008 6572726F 		.ascii	"errorIndicatorTask\000"
 251      72496E64 
 251      69636174 
 251      6F725461 
 251      736B00
 252              		.global	errorIndicatorTaskHandle
 253              		.global	defaultTask_attributes
 254 001b 00       		.align	2
 255              	.LC2:
 256 001c 64656661 		.ascii	"defaultTask\000"
 256      756C7454 
 256      61736B00 
 257              		.global	defaultTaskControlBlock
 258              		.global	defaultTaskBuffer
 259              		.global	defaultTaskHandle
 260              		.global	can_status
 261              		.section	.bss.CANTaskHandle,"aw",%nobits
 262              		.align	2
 263              		.set	.LANCHOR5,. + 0
 266              	CANTaskHandle:
 267 0000 00000000 		.space	4
 268              		.section	.bss.can_status,"aw",%nobits
 271              	can_status:
 272 0000 00       		.space	1
 273              		.section	.bss.defaultTaskBuffer,"aw",%nobits
 274              		.align	2
 277              	defaultTaskBuffer:
 278 0000 00000000 		.space	12000
 278      00000000 
 278      00000000 
 278      00000000 
 278      00000000 
 279              		.section	.bss.defaultTaskControlBlock,"aw",%nobits
 280              		.align	2
 283              	defaultTaskControlBlock:
 284 0000 00000000 		.space	92
 284      00000000 
 284      00000000 
 284      00000000 
 284      00000000 
 285              		.section	.bss.defaultTaskHandle,"aw",%nobits
 286              		.align	2
 287              		.set	.LANCHOR1,. + 0
 290              	defaultTaskHandle:
 291 0000 00000000 		.space	4
 292              		.section	.bss.errorIndicatorTaskHandle,"aw",%nobits
 293              		.align	2
 294              		.set	.LANCHOR3,. + 0
 297              	errorIndicatorTaskHandle:
 298 0000 00000000 		.space	4
 299              		.section	.rodata.CANTask_attributes,"a"
 300              		.align	2
 301              		.set	.LANCHOR4,. + 0
ARM GAS  /tmp/ccV6lX8j.s 			page 10


 304              	CANTask_attributes:
 305 0000 00000000 		.word	.LC0
 306 0004 00000000 		.space	16
 306      00000000 
 306      00000000 
 306      00000000 
 307 0014 00020000 		.word	512
 308 0018 29000000 		.word	41
 309 001c 00000000 		.space	8
 309      00000000 
 310              		.section	.rodata.defaultTask_attributes,"a"
 311              		.align	2
 312              		.set	.LANCHOR0,. + 0
 315              	defaultTask_attributes:
 316 0000 1C000000 		.word	.LC2
 317 0004 00000000 		.space	4
 318 0008 00000000 		.word	defaultTaskControlBlock
 319 000c 5C000000 		.word	92
 320 0010 00000000 		.word	defaultTaskBuffer
 321 0014 E02E0000 		.word	12000
 322 0018 2A000000 		.word	42
 323 001c 00000000 		.space	8
 323      00000000 
 324              		.section	.rodata.errorIndicatorTask_attributes,"a"
 325              		.align	2
 326              		.set	.LANCHOR2,. + 0
 329              	errorIndicatorTask_attributes:
 330 0000 08000000 		.word	.LC1
 331 0004 00000000 		.space	16
 331      00000000 
 331      00000000 
 331      00000000 
 332 0014 00020000 		.word	512
 333 0018 18000000 		.word	24
 334 001c 00000000 		.space	8
 334      00000000 
 335              		.text
 336              	.Letext0:
 337              		.file 2 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 338              		.file 3 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 339              		.file 4 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 340              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 341              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 342              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 343              		.file 8 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 344              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 345              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 346              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 347              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 348              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 349              		.file 14 "Core/Inc/can.h"
 350              		.file 15 "Core/Inc/usart.h"
 351              		.file 16 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rmw/typ
 352              		.file 17 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rmw/qos
 353              		.file 18 "App/Inc/motor_defs.h"
 354              		.file 19 "App/Inc/minicheetah_motor.h"
 355              		.file 20 "App/Inc/error_indicator.h"
ARM GAS  /tmp/ccV6lX8j.s 			page 11


 356              		.file 21 "App/Inc/hyperdog_uros_app.h"
ARM GAS  /tmp/ccV6lX8j.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
     /tmp/ccV6lX8j.s:20     .text.StartDefaultTask:0000000000000000 $t
     /tmp/ccV6lX8j.s:26     .text.StartDefaultTask:0000000000000000 StartDefaultTask
     /tmp/ccV6lX8j.s:70     .text.StartDefaultTask:0000000000000020 $d
     /tmp/ccV6lX8j.s:75     .text.StartErrorIndicatorTask:0000000000000000 $t
     /tmp/ccV6lX8j.s:81     .text.StartErrorIndicatorTask:0000000000000000 StartErrorIndicatorTask
     /tmp/ccV6lX8j.s:103    .text.StartCANTask:0000000000000000 $t
     /tmp/ccV6lX8j.s:109    .text.StartCANTask:0000000000000000 StartCANTask
     /tmp/ccV6lX8j.s:169    .text.StartCANTask:0000000000000058 $d
     /tmp/ccV6lX8j.s:178    .text.MX_FREERTOS_Init:0000000000000000 $t
     /tmp/ccV6lX8j.s:184    .text.MX_FREERTOS_Init:0000000000000000 MX_FREERTOS_Init
     /tmp/ccV6lX8j.s:230    .text.MX_FREERTOS_Init:0000000000000030 $d
     /tmp/ccV6lX8j.s:304    .rodata.CANTask_attributes:0000000000000000 CANTask_attributes
     /tmp/ccV6lX8j.s:244    .rodata.str1.4:0000000000000000 $d
     /tmp/ccV6lX8j.s:266    .bss.CANTaskHandle:0000000000000000 CANTaskHandle
     /tmp/ccV6lX8j.s:329    .rodata.errorIndicatorTask_attributes:0000000000000000 errorIndicatorTask_attributes
     /tmp/ccV6lX8j.s:297    .bss.errorIndicatorTaskHandle:0000000000000000 errorIndicatorTaskHandle
     /tmp/ccV6lX8j.s:315    .rodata.defaultTask_attributes:0000000000000000 defaultTask_attributes
     /tmp/ccV6lX8j.s:283    .bss.defaultTaskControlBlock:0000000000000000 defaultTaskControlBlock
     /tmp/ccV6lX8j.s:277    .bss.defaultTaskBuffer:0000000000000000 defaultTaskBuffer
     /tmp/ccV6lX8j.s:290    .bss.defaultTaskHandle:0000000000000000 defaultTaskHandle
     /tmp/ccV6lX8j.s:271    .bss.can_status:0000000000000000 can_status
     /tmp/ccV6lX8j.s:262    .bss.CANTaskHandle:0000000000000000 $d
     /tmp/ccV6lX8j.s:272    .bss.can_status:0000000000000000 $d
     /tmp/ccV6lX8j.s:274    .bss.defaultTaskBuffer:0000000000000000 $d
     /tmp/ccV6lX8j.s:280    .bss.defaultTaskControlBlock:0000000000000000 $d
     /tmp/ccV6lX8j.s:286    .bss.defaultTaskHandle:0000000000000000 $d
     /tmp/ccV6lX8j.s:293    .bss.errorIndicatorTaskHandle:0000000000000000 $d
     /tmp/ccV6lX8j.s:300    .rodata.CANTask_attributes:0000000000000000 $d
     /tmp/ccV6lX8j.s:311    .rodata.defaultTask_attributes:0000000000000000 $d
     /tmp/ccV6lX8j.s:325    .rodata.errorIndicatorTask_attributes:0000000000000000 $d

UNDEFINED SYMBOLS
osDelay
initMicroROS
init_hyperdog_node
spin_hyperdog_node
huart2
error_indicator
MOTOR_initId
MOTOR_initParams
MOTOR_initCtrlLimits
MOTOR_initCANConfig
MOTOR_enable
hcan1
osThreadNew
