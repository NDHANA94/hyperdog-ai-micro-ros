ARM GAS  /tmp/ccYfoX6L.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"minicheetah_motor.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MOTOR_initId,"ax",%progbits
  20              		.align	1
  21              		.global	MOTOR_initId
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MOTOR_initId:
  27              	.LVL0:
  28              	.LFB138:
  29              		.file 1 "App/Src/minicheetah_motor.c"
   1:App/Src/minicheetah_motor.c **** /* ========================================================================================
   2:App/Src/minicheetah_motor.c **** MIT License                                                                               |
   3:App/Src/minicheetah_motor.c ****                                                                                           |
   4:App/Src/minicheetah_motor.c **** Copyright (c) 2023 Nipun Dhananjaya Weerakkodi                                            |
   5:App/Src/minicheetah_motor.c ****                                                                                           |
   6:App/Src/minicheetah_motor.c **** Permission is hereby granted, free of charge, to any person obtaining a copy              |
   7:App/Src/minicheetah_motor.c **** of this software and associated documentation files (the "Software"), to deal             |
   8:App/Src/minicheetah_motor.c **** in the Software without restriction, including without limitation the rights              |
   9:App/Src/minicheetah_motor.c **** to use, copy, modify, merge, publish, distribute, sublicense, and/or sell                 |
  10:App/Src/minicheetah_motor.c **** copies of the Software, and to permit persons to whom the Software is                     |
  11:App/Src/minicheetah_motor.c **** furnished to do so, subject to the following conditions:                                  |
  12:App/Src/minicheetah_motor.c ****                                                                                           |
  13:App/Src/minicheetah_motor.c **** The above copyright notice and this permission notice shall be included in all            |
  14:App/Src/minicheetah_motor.c **** copies or substantial portions of the Software.                                           |
  15:App/Src/minicheetah_motor.c ****                                                                                           |
  16:App/Src/minicheetah_motor.c **** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR                |
  17:App/Src/minicheetah_motor.c **** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,                  |
  18:App/Src/minicheetah_motor.c **** FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE               |
  19:App/Src/minicheetah_motor.c **** AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER                    |
  20:App/Src/minicheetah_motor.c **** LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,             |
  21:App/Src/minicheetah_motor.c **** OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE             |
  22:App/Src/minicheetah_motor.c **** SOFTWARE.                                                                                 |
  23:App/Src/minicheetah_motor.c ****                                                                                           |
  24:App/Src/minicheetah_motor.c **** ==========================================================================================*/
  25:App/Src/minicheetah_motor.c **** 
  26:App/Src/minicheetah_motor.c **** #include "minicheetah_motor.h"
  27:App/Src/minicheetah_motor.c **** #include "error_indicator.h"
  28:App/Src/minicheetah_motor.c **** 
  29:App/Src/minicheetah_motor.c **** Motor_TypeDef motor[NUM_OF_MOTORS];
ARM GAS  /tmp/ccYfoX6L.s 			page 2


  30:App/Src/minicheetah_motor.c **** uint8_t motor_enable_cmd[8] = MOTOR_ENABLE_CMD;
  31:App/Src/minicheetah_motor.c **** uint8_t motor_disable_cmd[8] = MOTOR_DISABLE_CMD;
  32:App/Src/minicheetah_motor.c **** uint8_t motor_setzero_cmd[8] = MOTOR_SETZERO_CMD;
  33:App/Src/minicheetah_motor.c **** uint8_t motor_heartbeat_cmd[8] = MOTOR_HEARTBEAT;
  34:App/Src/minicheetah_motor.c **** 
  35:App/Src/minicheetah_motor.c **** uint16_t motor_error_code = MOTOR_ERROR_INITIAL;
  36:App/Src/minicheetah_motor.c **** uint8_t motor_state = 0;
  37:App/Src/minicheetah_motor.c **** 
  38:App/Src/minicheetah_motor.c **** /**
  39:App/Src/minicheetah_motor.c ****  * @brief To initialize a motor Id.
  40:App/Src/minicheetah_motor.c ****  * @brief To be fully initialized the motor, MOTOR_setParams, MOTOR_setCtrlLimits and MOTOR_configC
  41:App/Src/minicheetah_motor.c ****  * @param m motor instance 
  42:App/Src/minicheetah_motor.c ****  * @param id CAN StdId of the motor
  43:App/Src/minicheetah_motor.c ****  */
  44:App/Src/minicheetah_motor.c **** void MOTOR_initId(enum MOTORS m, uint8_t id)
  45:App/Src/minicheetah_motor.c **** {
  30              		.loc 1 45 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 45 1 is_stmt 0 view .LVU1
  36 0000 10B4     		push	{r4}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 4
  39              		.cfi_offset 4, -4
  46:App/Src/minicheetah_motor.c ****     // set init_state, state and error_code to thier initial state
  47:App/Src/minicheetah_motor.c ****     motor[m].state = MOTOR_INITIALIZING;
  40              		.loc 1 47 5 is_stmt 1 view .LVU2
  41              		.loc 1 47 20 is_stmt 0 view .LVU3
  42 0002 0B4C     		ldr	r4, .L3
  43 0004 EC23     		movs	r3, #236
  44 0006 03FB00F0 		mul	r0, r3, r0
  45              	.LVL1:
  46              		.loc 1 47 20 view .LVU4
  47 000a 2318     		adds	r3, r4, r0
  48 000c 0122     		movs	r2, #1
  49 000e 83F87120 		strb	r2, [r3, #113]
  48:App/Src/minicheetah_motor.c ****     motor[m].init_state = MOTOR_INIT_STATUS_NOT;
  50              		.loc 1 48 5 is_stmt 1 view .LVU5
  51              		.loc 1 48 25 is_stmt 0 view .LVU6
  52 0012 4FF0000C 		mov	ip, #0
  53 0016 83F870C0 		strb	ip, [r3, #112]
  49:App/Src/minicheetah_motor.c ****     motor[m].error_code = MOTOR_ERROR_INITIAL;
  54              		.loc 1 49 5 is_stmt 1 view .LVU7
  55              		.loc 1 49 25 is_stmt 0 view .LVU8
  56 001a 4FF0070C 		mov	ip, #7
  57 001e A3F872C0 		strh	ip, [r3, #114]	@ movhi
  50:App/Src/minicheetah_motor.c **** 
  51:App/Src/minicheetah_motor.c ****     /* Set Id */
  52:App/Src/minicheetah_motor.c ****     motor[m].id = id;
  58              		.loc 1 52 5 is_stmt 1 view .LVU9
  59              		.loc 1 52 17 is_stmt 0 view .LVU10
  60 0022 2154     		strb	r1, [r4, r0]
  53:App/Src/minicheetah_motor.c **** 
  54:App/Src/minicheetah_motor.c ****     /* update motor init_state */
  55:App/Src/minicheetah_motor.c ****     motor[m].init_state |= MOTOR_INIT_STATUS_ID; // set ID_SET bit of the init state
ARM GAS  /tmp/ccYfoX6L.s 			page 3


  61              		.loc 1 55 5 is_stmt 1 view .LVU11
  62              		.loc 1 55 25 is_stmt 0 view .LVU12
  63 0024 83F87020 		strb	r2, [r3, #112]
  56:App/Src/minicheetah_motor.c **** }
  64              		.loc 1 56 1 view .LVU13
  65 0028 5DF8044B 		ldr	r4, [sp], #4
  66              	.LCFI1:
  67              		.cfi_restore 4
  68              		.cfi_def_cfa_offset 0
  69 002c 7047     		bx	lr
  70              	.L4:
  71 002e 00BF     		.align	2
  72              	.L3:
  73 0030 00000000 		.word	.LANCHOR0
  74              		.cfi_endproc
  75              	.LFE138:
  77              		.section	.text.MOTOR_initParams,"ax",%progbits
  78              		.align	1
  79              		.global	MOTOR_initParams
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  84              	MOTOR_initParams:
  85              	.LVL2:
  86              	.LFB139:
  57:App/Src/minicheetah_motor.c **** 
  58:App/Src/minicheetah_motor.c **** 
  59:App/Src/minicheetah_motor.c **** /**
  60:App/Src/minicheetah_motor.c ****  * @brief To set motor parameters of the motor
  61:App/Src/minicheetah_motor.c ****  * @param m motor instance
  62:App/Src/minicheetah_motor.c ****  * @param pMax maximum position of the motor
  63:App/Src/minicheetah_motor.c ****  * @param vMax Maximum velocity of the motor
  64:App/Src/minicheetah_motor.c ****  * @param kpMax maximum Kp value of the motor
  65:App/Src/minicheetah_motor.c ****  * @param kdMax maximum Kd value of the motor
  66:App/Src/minicheetah_motor.c ****  * @param iffMax maximum feed forwad current of the motor
  67:App/Src/minicheetah_motor.c ****  */
  68:App/Src/minicheetah_motor.c **** void MOTOR_initParams(enum MOTORS m, float pMax, float vMax, float kpMax, float kdMax, float iffMax
  69:App/Src/minicheetah_motor.c **** {
  87              		.loc 1 69 1 is_stmt 1 view -0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		@ link register save eliminated.
  70:App/Src/minicheetah_motor.c ****     motor[m].params.p.min = -pMax;
  92              		.loc 1 70 5 view .LVU15
  93              		.loc 1 70 29 is_stmt 0 view .LVU16
  94 0000 F1EE407A 		vneg.f32	s15, s0
  95              		.loc 1 70 27 view .LVU17
  96 0004 1C4B     		ldr	r3, .L8
  97 0006 EC22     		movs	r2, #236
  98 0008 02FB0033 		mla	r3, r2, r0, r3
  99 000c C3ED017A 		vstr.32	s15, [r3, #4]
  71:App/Src/minicheetah_motor.c ****     motor[m].params.p.max = pMax;
 100              		.loc 1 71 5 is_stmt 1 view .LVU18
 101              		.loc 1 71 27 is_stmt 0 view .LVU19
 102 0010 83ED020A 		vstr.32	s0, [r3, #8]
  72:App/Src/minicheetah_motor.c ****     motor[m].params.v.min = -vMax;
ARM GAS  /tmp/ccYfoX6L.s 			page 4


 103              		.loc 1 72 5 is_stmt 1 view .LVU20
 104              		.loc 1 72 29 is_stmt 0 view .LVU21
 105 0014 F1EE607A 		vneg.f32	s15, s1
 106              		.loc 1 72 27 view .LVU22
 107 0018 C3ED037A 		vstr.32	s15, [r3, #12]
  73:App/Src/minicheetah_motor.c ****     motor[m].params.v.max = vMax;
 108              		.loc 1 73 5 is_stmt 1 view .LVU23
 109              		.loc 1 73 27 is_stmt 0 view .LVU24
 110 001c C3ED040A 		vstr.32	s1, [r3, #16]
  74:App/Src/minicheetah_motor.c ****     motor[m].params.kp.min    = 0;
 111              		.loc 1 74 5 is_stmt 1 view .LVU25
 112              		.loc 1 74 31 is_stmt 0 view .LVU26
 113 0020 0022     		movs	r2, #0
 114 0022 5A61     		str	r2, [r3, #20]	@ float
  75:App/Src/minicheetah_motor.c ****     motor[m].params.kp.max    = kpMax;
 115              		.loc 1 75 5 is_stmt 1 view .LVU27
 116              		.loc 1 75 31 is_stmt 0 view .LVU28
 117 0024 83ED061A 		vstr.32	s2, [r3, #24]
  76:App/Src/minicheetah_motor.c ****     motor[m].params.kd.min    = 0;
 118              		.loc 1 76 5 is_stmt 1 view .LVU29
 119              		.loc 1 76 31 is_stmt 0 view .LVU30
 120 0028 DA61     		str	r2, [r3, #28]	@ float
  77:App/Src/minicheetah_motor.c ****     motor[m].params.kd.max    = kdMax;
 121              		.loc 1 77 5 is_stmt 1 view .LVU31
 122              		.loc 1 77 31 is_stmt 0 view .LVU32
 123 002a C3ED081A 		vstr.32	s3, [r3, #32]
  78:App/Src/minicheetah_motor.c ****     motor[m].params.i_ff.min  = -iffMax;
 124              		.loc 1 78 5 is_stmt 1 view .LVU33
 125              		.loc 1 78 33 is_stmt 0 view .LVU34
 126 002e F1EE427A 		vneg.f32	s15, s4
 127              		.loc 1 78 31 view .LVU35
 128 0032 C3ED097A 		vstr.32	s15, [r3, #36]
  79:App/Src/minicheetah_motor.c ****     motor[m].params.i_ff.max  = iffMax;
 129              		.loc 1 79 5 is_stmt 1 view .LVU36
 130              		.loc 1 79 31 is_stmt 0 view .LVU37
 131 0036 83ED0A2A 		vstr.32	s4, [r3, #40]
  80:App/Src/minicheetah_motor.c ****     motor[m].params.vb.min    = 0;
 132              		.loc 1 80 5 is_stmt 1 view .LVU38
 133              		.loc 1 80 31 is_stmt 0 view .LVU39
 134 003a DA62     		str	r2, [r3, #44]	@ float
  81:App/Src/minicheetah_motor.c ****     motor[m].params.vb.max    = vbMax;
 135              		.loc 1 81 5 is_stmt 1 view .LVU40
 136              		.loc 1 81 31 is_stmt 0 view .LVU41
 137 003c C3ED0C2A 		vstr.32	s5, [r3, #48]
  82:App/Src/minicheetah_motor.c ****     
  83:App/Src/minicheetah_motor.c ****     /* update init_state and error_code */
  84:App/Src/minicheetah_motor.c ****     motor[m].init_state |= MOTOR_INIT_STATUS_PARAM; // set PARAM_SET bit of the motor init_state.
 138              		.loc 1 84 5 is_stmt 1 view .LVU42
 139              		.loc 1 84 25 is_stmt 0 view .LVU43
 140 0040 93F87010 		ldrb	r1, [r3, #112]	@ zero_extendqisi2
 141 0044 41F00201 		orr	r1, r1, #2
 142 0048 83F87010 		strb	r1, [r3, #112]
  85:App/Src/minicheetah_motor.c ****     motor[m].error_code &= ~ MOTOR_ERROR_PARAM; // reset PARAM_ERROR bit of motor error_code.
 143              		.loc 1 85 5 is_stmt 1 view .LVU44
 144              		.loc 1 85 25 is_stmt 0 view .LVU45
 145 004c B3F87220 		ldrh	r2, [r3, #114]
 146 0050 22F00202 		bic	r2, r2, #2
ARM GAS  /tmp/ccYfoX6L.s 			page 5


 147 0054 92B2     		uxth	r2, r2
 148 0056 A3F87220 		strh	r2, [r3, #114]	@ movhi
  86:App/Src/minicheetah_motor.c **** 
  87:App/Src/minicheetah_motor.c ****     /* If motor is fully initialized update error_code and motor state */
  88:App/Src/minicheetah_motor.c ****     if (motor[m].init_state == MOTOR_INIT_STATUS_OK)
 149              		.loc 1 88 5 is_stmt 1 view .LVU46
 150              		.loc 1 88 8 is_stmt 0 view .LVU47
 151 005a 0F29     		cmp	r1, #15
 152 005c 00D0     		beq	.L7
 153              	.LVL3:
 154              	.L5:
  89:App/Src/minicheetah_motor.c ****     {   
  90:App/Src/minicheetah_motor.c ****         motor[m].error_code &= ~MOTOR_ERROR_NOT_INITIALIZED; // reset NOT_INITIALIZED bit of error_
  91:App/Src/minicheetah_motor.c ****         motor[m].state = MOTOR_READY;
  92:App/Src/minicheetah_motor.c ****     }
  93:App/Src/minicheetah_motor.c **** }
 155              		.loc 1 93 1 view .LVU48
 156 005e 7047     		bx	lr
 157              	.LVL4:
 158              	.L7:
  90:App/Src/minicheetah_motor.c ****         motor[m].state = MOTOR_READY;
 159              		.loc 1 90 9 is_stmt 1 view .LVU49
  90:App/Src/minicheetah_motor.c ****         motor[m].state = MOTOR_READY;
 160              		.loc 1 90 29 is_stmt 0 view .LVU50
 161 0060 054B     		ldr	r3, .L8
 162 0062 EC21     		movs	r1, #236
 163 0064 01FB0030 		mla	r0, r1, r0, r3
 164              	.LVL5:
  90:App/Src/minicheetah_motor.c ****         motor[m].state = MOTOR_READY;
 165              		.loc 1 90 29 view .LVU51
 166 0068 22F00102 		bic	r2, r2, #1
 167 006c A0F87220 		strh	r2, [r0, #114]	@ movhi
  91:App/Src/minicheetah_motor.c ****     }
 168              		.loc 1 91 9 is_stmt 1 view .LVU52
  91:App/Src/minicheetah_motor.c ****     }
 169              		.loc 1 91 24 is_stmt 0 view .LVU53
 170 0070 0023     		movs	r3, #0
 171 0072 80F87130 		strb	r3, [r0, #113]
 172              		.loc 1 93 1 view .LVU54
 173 0076 F2E7     		b	.L5
 174              	.L9:
 175              		.align	2
 176              	.L8:
 177 0078 00000000 		.word	.LANCHOR0
 178              		.cfi_endproc
 179              	.LFE139:
 181              		.section	.text.MOTOR_initCtrlLimits,"ax",%progbits
 182              		.align	1
 183              		.global	MOTOR_initCtrlLimits
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 188              	MOTOR_initCtrlLimits:
 189              	.LVL6:
 190              	.LFB140:
  94:App/Src/minicheetah_motor.c **** 
  95:App/Src/minicheetah_motor.c **** 
ARM GAS  /tmp/ccYfoX6L.s 			page 6


  96:App/Src/minicheetah_motor.c **** /** 
  97:App/Src/minicheetah_motor.c ****  * @brief To set limit for the contral parameters and motor current
  98:App/Src/minicheetah_motor.c ****  * @param m Motor instance
  99:App/Src/minicheetah_motor.c ****  * @param pDesMax Higher limit for motor position
 100:App/Src/minicheetah_motor.c ****  * @param pDesMin Lower limit for motor position
 101:App/Src/minicheetah_motor.c ****  * @param vMax    Higher limit for motor velocity
 102:App/Src/minicheetah_motor.c ****  * @param iMax    Highr limit for motor intake current
 103:App/Src/minicheetah_motor.c ****  */
 104:App/Src/minicheetah_motor.c **** void MOTOR_initCtrlLimits(enum MOTORS m, float pDesMax, float pDesMin, float vMax, float iMax)
 105:App/Src/minicheetah_motor.c **** {
 191              		.loc 1 105 1 is_stmt 1 view -0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              		@ link register save eliminated.
 106:App/Src/minicheetah_motor.c ****     motor[m].limit.position.max = pDesMax;
 196              		.loc 1 106 5 view .LVU56
 197              		.loc 1 106 33 is_stmt 0 view .LVU57
 198 0000 154B     		ldr	r3, .L13
 199 0002 EC22     		movs	r2, #236
 200 0004 02FB0033 		mla	r3, r2, r0, r3
 201 0008 83ED0E0A 		vstr.32	s0, [r3, #56]
 107:App/Src/minicheetah_motor.c ****     motor[m].limit.position.min = pDesMin;
 202              		.loc 1 107 5 is_stmt 1 view .LVU58
 203              		.loc 1 107 33 is_stmt 0 view .LVU59
 204 000c C3ED0D0A 		vstr.32	s1, [r3, #52]
 108:App/Src/minicheetah_motor.c ****     motor[m].limit.velocity.max = vMax;
 205              		.loc 1 108 5 is_stmt 1 view .LVU60
 206              		.loc 1 108 33 is_stmt 0 view .LVU61
 207 0010 83ED101A 		vstr.32	s2, [r3, #64]
 109:App/Src/minicheetah_motor.c ****     motor[m].limit.velocity.min = -vMax;
 208              		.loc 1 109 5 is_stmt 1 view .LVU62
 209              		.loc 1 109 35 is_stmt 0 view .LVU63
 210 0014 B1EE411A 		vneg.f32	s2, s2
 211              	.LVL7:
 212              		.loc 1 109 33 view .LVU64
 213 0018 83ED0F1A 		vstr.32	s2, [r3, #60]
 110:App/Src/minicheetah_motor.c ****     motor[m].limit.current.max  = iMax;
 214              		.loc 1 110 5 is_stmt 1 view .LVU65
 215              		.loc 1 110 33 is_stmt 0 view .LVU66
 216 001c C3ED121A 		vstr.32	s3, [r3, #72]
 111:App/Src/minicheetah_motor.c ****     motor[m].limit.current.min  = -iMax;
 217              		.loc 1 111 5 is_stmt 1 view .LVU67
 218              		.loc 1 111 35 is_stmt 0 view .LVU68
 219 0020 F1EE611A 		vneg.f32	s3, s3
 220              	.LVL8:
 221              		.loc 1 111 33 view .LVU69
 222 0024 C3ED111A 		vstr.32	s3, [r3, #68]
 112:App/Src/minicheetah_motor.c **** 
 113:App/Src/minicheetah_motor.c ****     /* update motor init_state */
 114:App/Src/minicheetah_motor.c ****     motor[m].init_state |= MOTOR_INIT_STATUS_LIMITS; // set CTRL_LIMIT_SET bit of the motor init_st
 223              		.loc 1 114 5 is_stmt 1 view .LVU70
 224              		.loc 1 114 25 is_stmt 0 view .LVU71
 225 0028 93F87020 		ldrb	r2, [r3, #112]	@ zero_extendqisi2
 226 002c 42F00402 		orr	r2, r2, #4
 227 0030 83F87020 		strb	r2, [r3, #112]
 115:App/Src/minicheetah_motor.c **** 
ARM GAS  /tmp/ccYfoX6L.s 			page 7


 116:App/Src/minicheetah_motor.c ****     /* If motor is fully initialized update error_code */
 117:App/Src/minicheetah_motor.c ****     if (motor[m].init_state == MOTOR_INIT_STATUS_OK)
 228              		.loc 1 117 5 is_stmt 1 view .LVU72
 229              		.loc 1 117 8 is_stmt 0 view .LVU73
 230 0034 0F2A     		cmp	r2, #15
 231 0036 00D0     		beq	.L12
 232              	.LVL9:
 233              	.L10:
 118:App/Src/minicheetah_motor.c ****     { 
 119:App/Src/minicheetah_motor.c ****         motor[m].error_code &= ~MOTOR_ERROR_NOT_INITIALIZED; // reset NOT_INITIALIZED bit of error_
 120:App/Src/minicheetah_motor.c ****         motor[m].state = MOTOR_READY;
 121:App/Src/minicheetah_motor.c ****     }
 122:App/Src/minicheetah_motor.c **** }
 234              		.loc 1 122 1 view .LVU74
 235 0038 7047     		bx	lr
 236              	.LVL10:
 237              	.L12:
 119:App/Src/minicheetah_motor.c ****         motor[m].state = MOTOR_READY;
 238              		.loc 1 119 9 is_stmt 1 view .LVU75
 119:App/Src/minicheetah_motor.c ****         motor[m].state = MOTOR_READY;
 239              		.loc 1 119 29 is_stmt 0 view .LVU76
 240 003a 074B     		ldr	r3, .L13
 241 003c EC22     		movs	r2, #236
 242 003e 02FB0030 		mla	r0, r2, r0, r3
 243              	.LVL11:
 119:App/Src/minicheetah_motor.c ****         motor[m].state = MOTOR_READY;
 244              		.loc 1 119 29 view .LVU77
 245 0042 B0F87230 		ldrh	r3, [r0, #114]
 246 0046 23F00103 		bic	r3, r3, #1
 247 004a A0F87230 		strh	r3, [r0, #114]	@ movhi
 120:App/Src/minicheetah_motor.c ****     }
 248              		.loc 1 120 9 is_stmt 1 view .LVU78
 120:App/Src/minicheetah_motor.c ****     }
 249              		.loc 1 120 24 is_stmt 0 view .LVU79
 250 004e 0023     		movs	r3, #0
 251 0050 80F87130 		strb	r3, [r0, #113]
 252              		.loc 1 122 1 view .LVU80
 253 0054 F0E7     		b	.L10
 254              	.L14:
 255 0056 00BF     		.align	2
 256              	.L13:
 257 0058 00000000 		.word	.LANCHOR0
 258              		.cfi_endproc
 259              	.LFE140:
 261              		.section	.text.MOTOR_initCANConfig,"ax",%progbits
 262              		.align	1
 263              		.global	MOTOR_initCANConfig
 264              		.syntax unified
 265              		.thumb
 266              		.thumb_func
 268              	MOTOR_initCANConfig:
 269              	.LVL12:
 270              	.LFB141:
 123:App/Src/minicheetah_motor.c **** 
 124:App/Src/minicheetah_motor.c **** 
 125:App/Src/minicheetah_motor.c **** /** Confiure rx/tx messages and rx filter of the motor.
 126:App/Src/minicheetah_motor.c ****  * Make sure to call this function after initialied the motor IDs. *
ARM GAS  /tmp/ccYfoX6L.s 			page 8


 127:App/Src/minicheetah_motor.c ****  * \param m enum MOTOR
 128:App/Src/minicheetah_motor.c ****  * \param *hcan CAN interface pointer instance
 129:App/Src/minicheetah_motor.c ****  * \param filterbank filter bank id to use for rx filter
 130:App/Src/minicheetah_motor.c ****  *
 131:App/Src/minicheetah_motor.c ****  */
 132:App/Src/minicheetah_motor.c **** void MOTOR_initCANConfig(enum MOTORS m, CAN_HandleTypeDef* hcan, uint8_t filterbank)
 133:App/Src/minicheetah_motor.c **** {
 271              		.loc 1 133 1 is_stmt 1 view -0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275              		.loc 1 133 1 is_stmt 0 view .LVU82
 276 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 277              	.LCFI2:
 278              		.cfi_def_cfa_offset 24
 279              		.cfi_offset 4, -24
 280              		.cfi_offset 5, -20
 281              		.cfi_offset 6, -16
 282              		.cfi_offset 7, -12
 283              		.cfi_offset 8, -8
 284              		.cfi_offset 14, -4
 285 0004 0646     		mov	r6, r0
 286 0006 0846     		mov	r0, r1
 287              	.LVL13:
 134:App/Src/minicheetah_motor.c ****     /* copy hcan pointer to motor instance */
 135:App/Src/minicheetah_motor.c ****     motor[m].hcan_ptr = hcan;
 288              		.loc 1 135 5 is_stmt 1 view .LVU83
 289              		.loc 1 135 23 is_stmt 0 view .LVU84
 290 0008 DFF8CC80 		ldr	r8, .L22
 291 000c EC27     		movs	r7, #236
 292 000e 06FB07F7 		mul	r7, r6, r7
 293 0012 08EB0704 		add	r4, r8, r7
 294 0016 6167     		str	r1, [r4, #116]
 136:App/Src/minicheetah_motor.c **** 
 137:App/Src/minicheetah_motor.c ****     /* config can rx filter */
 138:App/Src/minicheetah_motor.c ****     motor[m].canRx.filter.FilterMode = CAN_FILTERMODE_IDMASK;
 295              		.loc 1 138 5 is_stmt 1 view .LVU85
 296              		.loc 1 138 38 is_stmt 0 view .LVU86
 297 0018 0025     		movs	r5, #0
 298 001a C4F8B450 		str	r5, [r4, #180]
 139:App/Src/minicheetah_motor.c ****     motor[m].canRx.filter.FilterScale = CAN_FILTERSCALE_32BIT;
 299              		.loc 1 139 5 is_stmt 1 view .LVU87
 300              		.loc 1 139 39 is_stmt 0 view .LVU88
 301 001e 0123     		movs	r3, #1
 302 0020 C4F8B830 		str	r3, [r4, #184]
 140:App/Src/minicheetah_motor.c ****     motor[m].canRx.filter.FilterIdHigh = 0 << 5; // motors sends can frame with Id number 0, 1st by
 303              		.loc 1 140 5 is_stmt 1 view .LVU89
 304              		.loc 1 140 40 is_stmt 0 view .LVU90
 305 0024 C4F89C50 		str	r5, [r4, #156]
 141:App/Src/minicheetah_motor.c ****     motor[m].canRx.filter.FilterIdLow  = 0x0;
 306              		.loc 1 141 5 is_stmt 1 view .LVU91
 307              		.loc 1 141 40 is_stmt 0 view .LVU92
 308 0028 C4F8A050 		str	r5, [r4, #160]
 142:App/Src/minicheetah_motor.c ****     motor[m].canRx.filter.FilterMaskIdHigh = 0xFFF;
 309              		.loc 1 142 5 is_stmt 1 view .LVU93
 310              		.loc 1 142 44 is_stmt 0 view .LVU94
 311 002c 40F6FF72 		movw	r2, #4095
ARM GAS  /tmp/ccYfoX6L.s 			page 9


 312              	.LVL14:
 313              		.loc 1 142 44 view .LVU95
 314 0030 C4F8A420 		str	r2, [r4, #164]
 143:App/Src/minicheetah_motor.c ****     motor[m].canRx.filter.FilterMaskIdLow = 0;
 315              		.loc 1 143 5 is_stmt 1 view .LVU96
 316              		.loc 1 143 43 is_stmt 0 view .LVU97
 317 0034 C4F8A850 		str	r5, [r4, #168]
 144:App/Src/minicheetah_motor.c ****     motor[m].canRx.filter.FilterFIFOAssignment = CAN_FilterFIFO0;
 318              		.loc 1 144 5 is_stmt 1 view .LVU98
 319              		.loc 1 144 48 is_stmt 0 view .LVU99
 320 0038 C4F8AC50 		str	r5, [r4, #172]
 145:App/Src/minicheetah_motor.c ****     motor[m].canRx.filter.FilterActivation = ENABLE;
 321              		.loc 1 145 5 is_stmt 1 view .LVU100
 322              		.loc 1 145 44 is_stmt 0 view .LVU101
 323 003c C4F8BC30 		str	r3, [r4, #188]
 146:App/Src/minicheetah_motor.c ****     // motor[m].canRx.filter.FilterBank = filterbank;
 147:App/Src/minicheetah_motor.c ****     HAL_CAN_ConfigFilter(hcan, &motor[m].canRx.filter);
 324              		.loc 1 147 5 is_stmt 1 view .LVU102
 325 0040 07F19801 		add	r1, r7, #152
 326              	.LVL15:
 327              		.loc 1 147 5 is_stmt 0 view .LVU103
 328 0044 4144     		add	r1, r1, r8
 329 0046 0431     		adds	r1, r1, #4
 330 0048 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 331              	.LVL16:
 148:App/Src/minicheetah_motor.c **** 
 149:App/Src/minicheetah_motor.c ****     /* config can tx header */
 150:App/Src/minicheetah_motor.c ****     motor[m].canTx.header.StdId = motor[m].id;
 332              		.loc 1 150 5 is_stmt 1 view .LVU104
 333              		.loc 1 150 43 is_stmt 0 view .LVU105
 334 004c 18F80730 		ldrb	r3, [r8, r7]	@ zero_extendqisi2
 335              		.loc 1 150 33 view .LVU106
 336 0050 C4F8CC30 		str	r3, [r4, #204]
 151:App/Src/minicheetah_motor.c ****     motor[m].canTx.header.IDE = CAN_ID_STD;
 337              		.loc 1 151 5 is_stmt 1 view .LVU107
 338              		.loc 1 151 31 is_stmt 0 view .LVU108
 339 0054 C4F8D450 		str	r5, [r4, #212]
 152:App/Src/minicheetah_motor.c ****     motor[m].canTx.header.DLC = NUM_OF_CAN_TX_BYETS;
 340              		.loc 1 152 5 is_stmt 1 view .LVU109
 341              		.loc 1 152 31 is_stmt 0 view .LVU110
 342 0058 0823     		movs	r3, #8
 343 005a C4F8DC30 		str	r3, [r4, #220]
 153:App/Src/minicheetah_motor.c ****     motor[m].canTx.header.RTR = CAN_RTR_DATA;
 344              		.loc 1 153 5 is_stmt 1 view .LVU111
 345              		.loc 1 153 31 is_stmt 0 view .LVU112
 346 005e C4F8D850 		str	r5, [r4, #216]
 154:App/Src/minicheetah_motor.c **** 
 155:App/Src/minicheetah_motor.c ****     /* If there is a CAN state error, update motor init_state, state and error_code */
 156:App/Src/minicheetah_motor.c ****     if(motor[m].hcan_ptr->ErrorCode == HAL_ERROR)
 347              		.loc 1 156 5 is_stmt 1 view .LVU113
 348              		.loc 1 156 16 is_stmt 0 view .LVU114
 349 0062 636F     		ldr	r3, [r4, #116]
 350              		.loc 1 156 25 view .LVU115
 351 0064 5B6A     		ldr	r3, [r3, #36]
 352              		.loc 1 156 7 view .LVU116
 353 0066 012B     		cmp	r3, #1
 354 0068 19D0     		beq	.L20
ARM GAS  /tmp/ccYfoX6L.s 			page 10


 157:App/Src/minicheetah_motor.c ****     {
 158:App/Src/minicheetah_motor.c ****         motor[m].init_state &= ~MOTOR_INIT_STATUS_CAN;
 159:App/Src/minicheetah_motor.c ****         motor[m].error_code |= MOTOR_ERROR_HAL_CAN;
 160:App/Src/minicheetah_motor.c ****         motor[m].state = ERROR;
 161:App/Src/minicheetah_motor.c ****     }
 162:App/Src/minicheetah_motor.c **** 
 163:App/Src/minicheetah_motor.c ****     else
 164:App/Src/minicheetah_motor.c ****     {
 165:App/Src/minicheetah_motor.c ****         /* update motor init_state and error_code */
 166:App/Src/minicheetah_motor.c ****         motor[m].init_state |= MOTOR_INIT_STATUS_CAN;
 355              		.loc 1 166 9 is_stmt 1 view .LVU117
 356              		.loc 1 166 29 is_stmt 0 view .LVU118
 357 006a 1B4B     		ldr	r3, .L22
 358 006c EC22     		movs	r2, #236
 359 006e 02FB0633 		mla	r3, r2, r6, r3
 360 0072 93F87020 		ldrb	r2, [r3, #112]	@ zero_extendqisi2
 361 0076 42F00802 		orr	r2, r2, #8
 362 007a 83F87020 		strb	r2, [r3, #112]
 167:App/Src/minicheetah_motor.c ****         motor[m].error_code &= ~MOTOR_ERROR_HAL_CAN; /* reset motor CAN_COFIG error in the error_co
 363              		.loc 1 167 9 is_stmt 1 view .LVU119
 364              		.loc 1 167 29 is_stmt 0 view .LVU120
 365 007e B3F87220 		ldrh	r2, [r3, #114]
 366 0082 22F00402 		bic	r2, r2, #4
 367 0086 A3F87220 		strh	r2, [r3, #114]	@ movhi
 368              	.L17:
 168:App/Src/minicheetah_motor.c ****     }
 169:App/Src/minicheetah_motor.c **** 
 170:App/Src/minicheetah_motor.c ****     /* If motor is fully initialized update motor state and error_code */
 171:App/Src/minicheetah_motor.c ****     if (motor[m].init_state == MOTOR_INIT_STATUS_OK)
 369              		.loc 1 171 5 is_stmt 1 view .LVU121
 370              		.loc 1 171 17 is_stmt 0 view .LVU122
 371 008a 134B     		ldr	r3, .L22
 372 008c EC22     		movs	r2, #236
 373 008e 02FB0633 		mla	r3, r2, r6, r3
 374 0092 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 375              		.loc 1 171 8 view .LVU123
 376 0096 0F2B     		cmp	r3, #15
 377 0098 11D0     		beq	.L21
 378              	.L15:
 172:App/Src/minicheetah_motor.c ****     { 
 173:App/Src/minicheetah_motor.c ****         motor[m].error_code &= ~MOTOR_ERROR_NOT_INITIALIZED; // reset NOT_INITIALIZED bit of error_
 174:App/Src/minicheetah_motor.c ****         motor[m].state = MOTOR_READY;
 175:App/Src/minicheetah_motor.c ****     }
 176:App/Src/minicheetah_motor.c ****        
 177:App/Src/minicheetah_motor.c **** }
 379              		.loc 1 177 1 view .LVU124
 380 009a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 381              	.L20:
 158:App/Src/minicheetah_motor.c ****         motor[m].error_code |= MOTOR_ERROR_HAL_CAN;
 382              		.loc 1 158 9 is_stmt 1 view .LVU125
 158:App/Src/minicheetah_motor.c ****         motor[m].error_code |= MOTOR_ERROR_HAL_CAN;
 383              		.loc 1 158 29 is_stmt 0 view .LVU126
 384 009e 94F87020 		ldrb	r2, [r4, #112]	@ zero_extendqisi2
 385 00a2 22F00802 		bic	r2, r2, #8
 386 00a6 84F87020 		strb	r2, [r4, #112]
 159:App/Src/minicheetah_motor.c ****         motor[m].state = ERROR;
 387              		.loc 1 159 9 is_stmt 1 view .LVU127
ARM GAS  /tmp/ccYfoX6L.s 			page 11


 159:App/Src/minicheetah_motor.c ****         motor[m].state = ERROR;
 388              		.loc 1 159 29 is_stmt 0 view .LVU128
 389 00aa B4F87220 		ldrh	r2, [r4, #114]
 390 00ae 42F00402 		orr	r2, r2, #4
 391 00b2 A4F87220 		strh	r2, [r4, #114]	@ movhi
 160:App/Src/minicheetah_motor.c ****     }
 392              		.loc 1 160 9 is_stmt 1 view .LVU129
 160:App/Src/minicheetah_motor.c ****     }
 393              		.loc 1 160 24 is_stmt 0 view .LVU130
 394 00b6 0122     		movs	r2, #1
 395 00b8 84F87120 		strb	r2, [r4, #113]
 396 00bc E5E7     		b	.L17
 397              	.L21:
 173:App/Src/minicheetah_motor.c ****         motor[m].state = MOTOR_READY;
 398              		.loc 1 173 9 is_stmt 1 view .LVU131
 173:App/Src/minicheetah_motor.c ****         motor[m].state = MOTOR_READY;
 399              		.loc 1 173 29 is_stmt 0 view .LVU132
 400 00be 0648     		ldr	r0, .L22
 401 00c0 02FB0606 		mla	r6, r2, r6, r0
 402 00c4 B6F87230 		ldrh	r3, [r6, #114]
 403 00c8 23F00103 		bic	r3, r3, #1
 404 00cc A6F87230 		strh	r3, [r6, #114]	@ movhi
 174:App/Src/minicheetah_motor.c ****     }
 405              		.loc 1 174 9 is_stmt 1 view .LVU133
 174:App/Src/minicheetah_motor.c ****     }
 406              		.loc 1 174 24 is_stmt 0 view .LVU134
 407 00d0 0023     		movs	r3, #0
 408 00d2 86F87130 		strb	r3, [r6, #113]
 409              		.loc 1 177 1 view .LVU135
 410 00d6 E0E7     		b	.L15
 411              	.L23:
 412              		.align	2
 413              	.L22:
 414 00d8 00000000 		.word	.LANCHOR0
 415              		.cfi_endproc
 416              	.LFE141:
 418              		.section	.text.MOTOR_startWatchdog,"ax",%progbits
 419              		.align	1
 420              		.global	MOTOR_startWatchdog
 421              		.syntax unified
 422              		.thumb
 423              		.thumb_func
 425              	MOTOR_startWatchdog:
 426              	.LFB147:
 178:App/Src/minicheetah_motor.c **** 
 179:App/Src/minicheetah_motor.c **** 
 180:App/Src/minicheetah_motor.c **** /** 
 181:App/Src/minicheetah_motor.c ****  * \brief To send a heartbeat to a motor and to update motor_state and error_code.
 182:App/Src/minicheetah_motor.c ****  * Heartbeat will be sent although motor state is in ERROR. 
 183:App/Src/minicheetah_motor.c ****  * 
 184:App/Src/minicheetah_motor.c ****  * \param m enum name of the motor 
 185:App/Src/minicheetah_motor.c ****  * 
 186:App/Src/minicheetah_motor.c ****  */
 187:App/Src/minicheetah_motor.c **** void MOTOR_sendHeatbeat(enum MOTORS m)
 188:App/Src/minicheetah_motor.c **** {
 189:App/Src/minicheetah_motor.c ****     /* Copy heatbeat comd to can_tx mesage */
 190:App/Src/minicheetah_motor.c ****     memcpy(motor[m].canTx.data, motor_heartbeat_cmd, sizeof(motor_heartbeat_cmd));
ARM GAS  /tmp/ccYfoX6L.s 			page 12


 191:App/Src/minicheetah_motor.c **** 
 192:App/Src/minicheetah_motor.c ****     /* send the heartbeat */
 193:App/Src/minicheetah_motor.c ****     MOTOR_sendTxGetRx(m);
 194:App/Src/minicheetah_motor.c **** 
 195:App/Src/minicheetah_motor.c ****     /* update the motor feedback */
 196:App/Src/minicheetah_motor.c ****     _unpack_canRx(m);
 197:App/Src/minicheetah_motor.c ****     
 198:App/Src/minicheetah_motor.c **** 
 199:App/Src/minicheetah_motor.c ****     /* update error_code, if motor is onine */
 200:App/Src/minicheetah_motor.c ****     if(!_is_motor_error(m, MOTOR_ERROR_OFFLINE))
 201:App/Src/minicheetah_motor.c ****     {
 202:App/Src/minicheetah_motor.c ****         /* @todo : Check for other errors (OOR, OH, OC) and update error_code */
 203:App/Src/minicheetah_motor.c **** 
 204:App/Src/minicheetah_motor.c ****         motor[m].error_code &= ~ MOTOR_ERROR_NOT_READY;     /*!< Reset motor is not ready error */
 205:App/Src/minicheetah_motor.c ****         motor[m].error_code &= ~ MOTOR_ERROR_OOR;           /* Reset motor out of range error */
 206:App/Src/minicheetah_motor.c ****         motor[m].error_code &= ~ MOTOR_ERROR_OH;            /* Reset motor over-heated error */
 207:App/Src/minicheetah_motor.c ****         motor[m].error_code &= ~ MOTOR_ERROR_OC;            /* Reset motor over-current error */
 208:App/Src/minicheetah_motor.c ****     }
 209:App/Src/minicheetah_motor.c **** }
 210:App/Src/minicheetah_motor.c **** 
 211:App/Src/minicheetah_motor.c **** 
 212:App/Src/minicheetah_motor.c **** /**
 213:App/Src/minicheetah_motor.c ****  * @brief This method is used to send the command to the motor and get the response from the motor.
 214:App/Src/minicheetah_motor.c ****  * If HAL_CAN sent the Tx command and we loss the response from the motor, this method will count 
 215:App/Src/minicheetah_motor.c ****  * how many time we missed the response. once the missed response times more than defined 
 216:App/Src/minicheetah_motor.c ****  * MAX_MOTOR_NO_RESPONSE_COUNT, motor state is set to ERROR and error_code's MOTOR_OFFLINE bit will
 217:App/Src/minicheetah_motor.c ****  * If HAL_CAN will be failed to send or get message, motor state will be set to ERROR and error_cod
 218:App/Src/minicheetah_motor.c ****  * MOTOR_ERROR_HAL_CAN bit will be set.
 219:App/Src/minicheetah_motor.c ****  * 
 220:App/Src/minicheetah_motor.c ****  * \param m enum name of the motor 
 221:App/Src/minicheetah_motor.c ****  */
 222:App/Src/minicheetah_motor.c **** void MOTOR_sendTxGetRx(enum MOTORS m)
 223:App/Src/minicheetah_motor.c **** {
 224:App/Src/minicheetah_motor.c ****     /* Send CanTx message to the motor */
 225:App/Src/minicheetah_motor.c ****     if(HAL_CAN_AddTxMessage(motor[m].hcan_ptr, &motor[m].canTx.header, motor[m].canTx.data, &motor[
 226:App/Src/minicheetah_motor.c ****     {
 227:App/Src/minicheetah_motor.c ****         /*  get CAN rx message and filter motor Id  */
 228:App/Src/minicheetah_motor.c ****         uint8_t rx_data[NUM_OF_CAN_RX_BYTES];
 229:App/Src/minicheetah_motor.c ****         if(HAL_CAN_GetRxMessage(motor[m].hcan_ptr, CAN_RX_FIFO0, &motor[m].canRx.header, rx_data) =
 230:App/Src/minicheetah_motor.c ****         {
 231:App/Src/minicheetah_motor.c ****             /* If rx msg was sent by the right motor, save rx data into canRx.data */
 232:App/Src/minicheetah_motor.c ****             memcpy(motor[m].canRx.data, rx_data, NUM_OF_CAN_RX_BYTES);
 233:App/Src/minicheetah_motor.c **** 
 234:App/Src/minicheetah_motor.c ****             /* unpack canRx data into motor feedback {position, velocity, currunt} */
 235:App/Src/minicheetah_motor.c ****             _unpack_canRx(m);
 236:App/Src/minicheetah_motor.c **** 
 237:App/Src/minicheetah_motor.c ****             /* reset motor noResp_counter */
 238:App/Src/minicheetah_motor.c ****             motor[m].noResp_counter = 0;
 239:App/Src/minicheetah_motor.c **** 
 240:App/Src/minicheetah_motor.c ****             /* update motor error_code */
 241:App/Src/minicheetah_motor.c ****             motor[m].error_code &= ~MOTOR_ERROR_OFFLINE; /*!< Reset motor offline error */
 242:App/Src/minicheetah_motor.c ****             motor[m].error_code &= ~MOTOR_ERROR_HAL_CAN; /*!< Reset motor HAL_CAN error */
 243:App/Src/minicheetah_motor.c **** 
 244:App/Src/minicheetah_motor.c ****             /* update motor state */
 245:App/Src/minicheetah_motor.c ****             if(motor[m].state != MOTOR_ENABLED && !_is_motor_error(m, MOTOR_ERROR_NOT_INITIALIZED))
 246:App/Src/minicheetah_motor.c ****             {
 247:App/Src/minicheetah_motor.c ****                 motor[m].state = MOTOR_READY; /*!< Reset motor error state */
ARM GAS  /tmp/ccYfoX6L.s 			page 13


 248:App/Src/minicheetah_motor.c ****             }
 249:App/Src/minicheetah_motor.c ****         }
 250:App/Src/minicheetah_motor.c **** 
 251:App/Src/minicheetah_motor.c ****          /* If tx msg was sent and rx msg was received, but rx msg was sent by another motor */
 252:App/Src/minicheetah_motor.c ****         else if (motor[m].hcan_ptr->ErrorCode != HAL_ERROR)
 253:App/Src/minicheetah_motor.c ****         {
 254:App/Src/minicheetah_motor.c ****              /* count failiers of motor response */
 255:App/Src/minicheetah_motor.c ****             motor[m].noResp_counter ++;
 256:App/Src/minicheetah_motor.c **** 
 257:App/Src/minicheetah_motor.c ****             /* if motor response was no recived more than MAX_MOTOR_NO_RESPONSE_COUNT, update motoe
 258:App/Src/minicheetah_motor.c ****             if(motor[m].noResp_counter > MAX_MOTOR_NO_RESPONSE_COUNT)
 259:App/Src/minicheetah_motor.c ****             {
 260:App/Src/minicheetah_motor.c ****                 motor[m].error_code |= MOTOR_ERROR_OFFLINE; /*!< Set motor offline error */
 261:App/Src/minicheetah_motor.c ****                 motor[m].state = MOTOR_ERROR;
 262:App/Src/minicheetah_motor.c ****             }
 263:App/Src/minicheetah_motor.c ****         }
 264:App/Src/minicheetah_motor.c ****     }
 265:App/Src/minicheetah_motor.c **** 
 266:App/Src/minicheetah_motor.c ****     /* If Send or Get msg was failed */
 267:App/Src/minicheetah_motor.c ****     else
 268:App/Src/minicheetah_motor.c ****     {
 269:App/Src/minicheetah_motor.c ****         /* update motor error_code */
 270:App/Src/minicheetah_motor.c ****         motor[m].error_code |= MOTOR_ERROR_HAL_CAN; /*!< set HAL_CAN error */
 271:App/Src/minicheetah_motor.c **** 
 272:App/Src/minicheetah_motor.c ****         /* update motor state */
 273:App/Src/minicheetah_motor.c ****         motor[m].state = MOTOR_ERROR; 
 274:App/Src/minicheetah_motor.c ****     }
 275:App/Src/minicheetah_motor.c **** }
 276:App/Src/minicheetah_motor.c **** 
 277:App/Src/minicheetah_motor.c **** 
 278:App/Src/minicheetah_motor.c **** 
 279:App/Src/minicheetah_motor.c **** /**
 280:App/Src/minicheetah_motor.c ****  *  @brief To send enable motor command and update motor state.
 281:App/Src/minicheetah_motor.c ****  * Enable command can be sent only if there is no internal motor errors such as;
 282:App/Src/minicheetah_motor.c ****  * over-current, over-heat. 
 283:App/Src/minicheetah_motor.c ****  * @param m enum name of the motor 
 284:App/Src/minicheetah_motor.c ****  * 
 285:App/Src/minicheetah_motor.c ****  */
 286:App/Src/minicheetah_motor.c **** void MOTOR_enable(enum MOTORS m)
 287:App/Src/minicheetah_motor.c **** {
 288:App/Src/minicheetah_motor.c ****     /* If motor is not over-heated or not over-current */
 289:App/Src/minicheetah_motor.c ****     if(!_is_motor_error(m, 0b00001100000U))
 290:App/Src/minicheetah_motor.c ****     {
 291:App/Src/minicheetah_motor.c ****         /* set canTx data to enable command */
 292:App/Src/minicheetah_motor.c ****         memcpy(motor[m].canTx.data, motor_enable_cmd, sizeof(motor_enable_cmd));
 293:App/Src/minicheetah_motor.c **** 
 294:App/Src/minicheetah_motor.c ****         /* Send the cmd and get the response */
 295:App/Src/minicheetah_motor.c ****         MOTOR_sendTxGetRx(m);
 296:App/Src/minicheetah_motor.c **** 
 297:App/Src/minicheetah_motor.c ****         /* if response received from the motor m, update state and error_code */
 298:App/Src/minicheetah_motor.c ****         if(motor[m].noResp_counter == 0){
 299:App/Src/minicheetah_motor.c ****             motor[m].error_code &= ~MOTOR_ERROR_EN; /*!< reset */
 300:App/Src/minicheetah_motor.c ****             motor[m].state = MOTOR_ENABLED;
 301:App/Src/minicheetah_motor.c ****         }
 302:App/Src/minicheetah_motor.c **** 
 303:App/Src/minicheetah_motor.c ****         /* else, update error_code and state */
 304:App/Src/minicheetah_motor.c ****         else{
ARM GAS  /tmp/ccYfoX6L.s 			page 14


 305:App/Src/minicheetah_motor.c ****             motor[m].error_code |= MOTOR_ERROR_EN; /*!< set `enbale error` bit of the error code*/
 306:App/Src/minicheetah_motor.c ****             motor[m].state = MOTOR_ERROR;
 307:App/Src/minicheetah_motor.c ****         }
 308:App/Src/minicheetah_motor.c **** 
 309:App/Src/minicheetah_motor.c ****     }
 310:App/Src/minicheetah_motor.c ****     
 311:App/Src/minicheetah_motor.c **** }
 312:App/Src/minicheetah_motor.c **** 
 313:App/Src/minicheetah_motor.c **** 
 314:App/Src/minicheetah_motor.c **** /**
 315:App/Src/minicheetah_motor.c ****  * To send motor disable command
 316:App/Src/minicheetah_motor.c ****  * @param m enum name of the motor 
 317:App/Src/minicheetah_motor.c ****  */
 318:App/Src/minicheetah_motor.c **** void MOTOR_disable(enum MOTORS m)
 319:App/Src/minicheetah_motor.c **** {
 320:App/Src/minicheetah_motor.c ****     
 321:App/Src/minicheetah_motor.c ****     /* set canTx data to enable command */
 322:App/Src/minicheetah_motor.c ****     memcpy(motor[m].canTx.data, motor_disable_cmd, sizeof(motor_disable_cmd));
 323:App/Src/minicheetah_motor.c **** 
 324:App/Src/minicheetah_motor.c ****     /* Send the cmd and get the response */
 325:App/Src/minicheetah_motor.c ****     MOTOR_sendTxGetRx(m);
 326:App/Src/minicheetah_motor.c **** 
 327:App/Src/minicheetah_motor.c ****     /* if response received from the motor m, update state  and error_code */
 328:App/Src/minicheetah_motor.c ****     if(motor[m].noResp_counter == 0){
 329:App/Src/minicheetah_motor.c ****         motor[m].error_code &= ~MOTOR_ERROR_DIS;
 330:App/Src/minicheetah_motor.c ****         motor[m].state = MOTOR_READY;
 331:App/Src/minicheetah_motor.c ****     }
 332:App/Src/minicheetah_motor.c **** 
 333:App/Src/minicheetah_motor.c ****     /* else, update error_code and state */
 334:App/Src/minicheetah_motor.c ****     else{
 335:App/Src/minicheetah_motor.c ****         motor[m].error_code |= MOTOR_ERROR_DIS;
 336:App/Src/minicheetah_motor.c ****         motor[m].state = MOTOR_ERROR;
 337:App/Src/minicheetah_motor.c ****     }
 338:App/Src/minicheetah_motor.c **** 
 339:App/Src/minicheetah_motor.c **** }
 340:App/Src/minicheetah_motor.c **** 
 341:App/Src/minicheetah_motor.c **** /**
 342:App/Src/minicheetah_motor.c ****  * To send motor set_zero command.
 343:App/Src/minicheetah_motor.c ****  * This command can be used for setting the motor current position as its zero position.
 344:App/Src/minicheetah_motor.c ****  * @param m enum name of the motor 
 345:App/Src/minicheetah_motor.c ****  * 
 346:App/Src/minicheetah_motor.c ****  * @todo : when it's possible to set motor position zero ?
 347:App/Src/minicheetah_motor.c ****  * @todo : make a condition to send this cmd, only when motor can set the zero position
 348:App/Src/minicheetah_motor.c ****  */
 349:App/Src/minicheetah_motor.c **** void MOTOR_setZero(enum MOTORS m)
 350:App/Src/minicheetah_motor.c **** {
 351:App/Src/minicheetah_motor.c ****     /* set canTx data to enable command */
 352:App/Src/minicheetah_motor.c ****     memcpy(motor[m].canTx.data, motor_setzero_cmd, sizeof(motor_setzero_cmd));
 353:App/Src/minicheetah_motor.c **** 
 354:App/Src/minicheetah_motor.c ****     /* Send the cmd and get the response */
 355:App/Src/minicheetah_motor.c ****     MOTOR_sendTxGetRx(m);
 356:App/Src/minicheetah_motor.c **** 
 357:App/Src/minicheetah_motor.c ****     /*  update error_code */
 358:App/Src/minicheetah_motor.c ****     if(motor[m].noResp_counter != 0)
 359:App/Src/minicheetah_motor.c ****     {
 360:App/Src/minicheetah_motor.c ****         motor[m].error_code |= MOTOR_ERROR_SZ;
 361:App/Src/minicheetah_motor.c ****     }
ARM GAS  /tmp/ccYfoX6L.s 			page 15


 362:App/Src/minicheetah_motor.c **** }
 363:App/Src/minicheetah_motor.c **** 
 364:App/Src/minicheetah_motor.c **** 
 365:App/Src/minicheetah_motor.c **** 
 366:App/Src/minicheetah_motor.c **** void MOTOR_startWatchdog()
 367:App/Src/minicheetah_motor.c **** {
 427              		.loc 1 367 1 is_stmt 1 view -0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 0
 430              		@ frame_needed = 0, uses_anonymous_args = 0
 431              		@ link register save eliminated.
 368:App/Src/minicheetah_motor.c ****     
 369:App/Src/minicheetah_motor.c **** }
 432              		.loc 1 369 1 view .LVU137
 433 0000 7047     		bx	lr
 434              		.cfi_endproc
 435              	.LFE147:
 437              		.section	.text._is_motor_error,"ax",%progbits
 438              		.align	1
 439              		.global	_is_motor_error
 440              		.syntax unified
 441              		.thumb
 442              		.thumb_func
 444              	_is_motor_error:
 445              	.LVL17:
 446              	.LFB150:
 370:App/Src/minicheetah_motor.c **** 
 371:App/Src/minicheetah_motor.c **** /**
 372:App/Src/minicheetah_motor.c ****  * Pack motor commands from `motor[x].cmd` into `motor[x].canTx` message 
 373:App/Src/minicheetah_motor.c ****  * 
 374:App/Src/minicheetah_motor.c **** */
 375:App/Src/minicheetah_motor.c **** void _pack_cmd(enum MOTORS m)
 376:App/Src/minicheetah_motor.c **** {
 377:App/Src/minicheetah_motor.c ****     /*  
 378:App/Src/minicheetah_motor.c ****     * 
 379:App/Src/minicheetah_motor.c ****     * CAN Command Packet Structure 
 380:App/Src/minicheetah_motor.c ****     * 16 bit position command, between -4*pi and 4*pi
 381:App/Src/minicheetah_motor.c ****     * 12 bit velocity command, between -30 and + 30 rad/s
 382:App/Src/minicheetah_motor.c ****     * 12 bit kp, between 0 and 500 N-m/rad
 383:App/Src/minicheetah_motor.c ****     * 12 bit kd, between 0 and 100 N-m*s/rad
 384:App/Src/minicheetah_motor.c ****     * 12 bit feed forward torque, between -18 and 18 N-m
 385:App/Src/minicheetah_motor.c ****     * CAN Packet is 8 8-bit words
 386:App/Src/minicheetah_motor.c ****     * Formatted as follows.  For each quantity, bit 0 is LSB
 387:App/Src/minicheetah_motor.c ****     * 0: [position[15-8]]
 388:App/Src/minicheetah_motor.c ****     * 1: [position[7-0]]
 389:App/Src/minicheetah_motor.c ****     * 2: [velocity[11-4]]
 390:App/Src/minicheetah_motor.c ****     * 3: [velocity[3-0] , kp[11-8]]
 391:App/Src/minicheetah_motor.c ****     * 4: [kp[7-0]]
 392:App/Src/minicheetah_motor.c ****     * 5: [kd[11-4]]
 393:App/Src/minicheetah_motor.c ****     * 6: [kd[3-0], torque[11-8]]
 394:App/Src/minicheetah_motor.c ****     * 7: [torque[7-0]] 
 395:App/Src/minicheetah_motor.c ****     */
 396:App/Src/minicheetah_motor.c **** 
 397:App/Src/minicheetah_motor.c ****     /* Limit data to be within bounds */
 398:App/Src/minicheetah_motor.c ****     float p_des = fminf(fmaxf(motor[m].params.p.min, motor[m].cmd.p_des), motor[m].params.p.max);
 399:App/Src/minicheetah_motor.c ****     float v_des = fminf(fmaxf(motor[m].params.v.min, motor[m].cmd.v_des), motor[m].params.v.max);
 400:App/Src/minicheetah_motor.c ****     float kp    = fminf(fmaxf(motor[m].params.kp.min,    motor[m].cmd.kp   ), motor[m].params.kp.ma
ARM GAS  /tmp/ccYfoX6L.s 			page 16


 401:App/Src/minicheetah_motor.c ****     float kd    = fminf(fmaxf(motor[m].params.kd.min,    motor[m].cmd.kd   ), motor[m].params.kd.ma
 402:App/Src/minicheetah_motor.c ****     float iff   = fminf(fmaxf(motor[m].params.i_ff.min,  motor[m].cmd.iff  ), motor[m].params.i_ff.
 403:App/Src/minicheetah_motor.c **** 
 404:App/Src/minicheetah_motor.c ****     /* Convert floats to unsigned ints */
 405:App/Src/minicheetah_motor.c ****     int p_int   = float2uint(p_des, motor[m].params.p.min, motor[m].params.p.max, 16);
 406:App/Src/minicheetah_motor.c ****     int v_int   = float2uint(v_des, motor[m].params.v.min, motor[m].params.v.max, 12);
 407:App/Src/minicheetah_motor.c ****     int kp_int  = float2uint(kp,    motor[m].params.kp.min,    motor[m].params.kp.max   , 12);
 408:App/Src/minicheetah_motor.c ****     int kd_int  = float2uint(kd,    motor[m].params.kd.min,    motor[m].params.kd.max   , 12);
 409:App/Src/minicheetah_motor.c ****     int iff_int = float2uint(iff,   motor[m].params.i_ff.min,  motor[m].params.i_ff.max , 12);
 410:App/Src/minicheetah_motor.c **** 
 411:App/Src/minicheetah_motor.c ****     motor[m].canTx.data[0] = p_int >> 8;
 412:App/Src/minicheetah_motor.c ****     motor[m].canTx.data[1] = p_int & 0xFF;
 413:App/Src/minicheetah_motor.c ****     motor[m].canTx.data[2] = v_int >> 4;
 414:App/Src/minicheetah_motor.c ****     motor[m].canTx.data[3] = ((v_int&0xF)<<4) | (kp_int>>8);
 415:App/Src/minicheetah_motor.c ****     motor[m].canTx.data[4] = kp_int&0xFF;
 416:App/Src/minicheetah_motor.c ****     motor[m].canTx.data[5] = kd_int>>4;
 417:App/Src/minicheetah_motor.c ****     motor[m].canTx.data[6] = ((kd_int&0xF)<<4) | (iff_int>>8);
 418:App/Src/minicheetah_motor.c ****     motor[m].canTx.data[7] = iff_int&0xFF;
 419:App/Src/minicheetah_motor.c **** }
 420:App/Src/minicheetah_motor.c **** 
 421:App/Src/minicheetah_motor.c **** 
 422:App/Src/minicheetah_motor.c **** /**
 423:App/Src/minicheetah_motor.c ****  * unpack `motor[x].canRx` data to `motor[x].feedback` 
 424:App/Src/minicheetah_motor.c ****  * \param m enum name of the motor
 425:App/Src/minicheetah_motor.c **** */
 426:App/Src/minicheetah_motor.c **** void _unpack_canRx(enum MOTORS m)
 427:App/Src/minicheetah_motor.c **** {
 428:App/Src/minicheetah_motor.c ****     /** 
 429:App/Src/minicheetah_motor.c ****      * CAN Reply Packet Structure
 430:App/Src/minicheetah_motor.c ****      * \protocol  :
 431:App/Src/minicheetah_motor.c **** 	 * 16 bit position, between -4*pi and 4*pi
 432:App/Src/minicheetah_motor.c **** 	 * 12 bit velocity, between -30 and + 30 rad/s
 433:App/Src/minicheetah_motor.c **** 	 * 12 bit current, between -40 and 40;
 434:App/Src/minicheetah_motor.c **** 	 * CAN Packet is 5 8-bit words
 435:App/Src/minicheetah_motor.c **** 	 * Formatted as follows.  For each quantity, bit 0 is LSB
 436:App/Src/minicheetah_motor.c ****      * 0: [id]
 437:App/Src/minicheetah_motor.c **** 	 * 1: [position[15-8]]
 438:App/Src/minicheetah_motor.c **** 	 * 2: [position[7-0]]
 439:App/Src/minicheetah_motor.c **** 	 * 3: [velocity[11-4]]
 440:App/Src/minicheetah_motor.c **** 	 * 4: [velocity[3-0] , current[11-8]]
 441:App/Src/minicheetah_motor.c **** 	 * 5: [current[7-0]]
 442:App/Src/minicheetah_motor.c ****      */
 443:App/Src/minicheetah_motor.c **** 
 444:App/Src/minicheetah_motor.c ****     /* unpack uints from motor[x].canRx.data */
 445:App/Src/minicheetah_motor.c ****     int p_int  = (motor[m].canRx.data[1] << 8) | motor[m].canRx.data[2];
 446:App/Src/minicheetah_motor.c ****     int v_int  = (motor[m].canRx.data[3] << 4) | motor[m].canRx.data[4]>>4;
 447:App/Src/minicheetah_motor.c ****     int i_int  = ((motor[m].canRx.data[4]&0xF)<<8) | motor[m].canRx.data[5];
 448:App/Src/minicheetah_motor.c **** 
 449:App/Src/minicheetah_motor.c ****     /* convert uints to float  and set them in `motor[x].feedback.X` */
 450:App/Src/minicheetah_motor.c ****     motor[m].feedback.position = uint2float(p_int, motor[m].params.p.min, motor[m].params.p.max, 16
 451:App/Src/minicheetah_motor.c ****     motor[m].feedback.velocity = uint2float(v_int, motor[m].params.v.min, motor[m].params.v.max, 12
 452:App/Src/minicheetah_motor.c ****     motor[m].feedback.current  = uint2float(i_int, motor[m].params.i_ff.min,  motor[m].params.i_ff.
 453:App/Src/minicheetah_motor.c ****     if (NUM_OF_CAN_RX_BYTES == 7){
 454:App/Src/minicheetah_motor.c ****         motor[m].feedback.vb = uint2float(motor[m].canRx.data[6], motor[m].params.vb.min,  motor[m]
 455:App/Src/minicheetah_motor.c ****     }
 456:App/Src/minicheetah_motor.c **** 
 457:App/Src/minicheetah_motor.c **** }
ARM GAS  /tmp/ccYfoX6L.s 			page 17


 458:App/Src/minicheetah_motor.c **** 
 459:App/Src/minicheetah_motor.c **** 
 460:App/Src/minicheetah_motor.c **** 
 461:App/Src/minicheetah_motor.c **** /**
 462:App/Src/minicheetah_motor.c ****  * @brief To check if a given `error_code` is set.
 463:App/Src/minicheetah_motor.c ****  * \param m enum name of the motor 
 464:App/Src/minicheetah_motor.c ****  * @param error_word which error bit(s) to be checked
 465:App/Src/minicheetah_motor.c ****  * @retval bool:  1 if set, 0 else
 466:App/Src/minicheetah_motor.c ****  */
 467:App/Src/minicheetah_motor.c **** bool _is_motor_error(enum MOTORS m, uint8_t error_word)
 468:App/Src/minicheetah_motor.c **** {
 447              		.loc 1 468 1 view -0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 451              		@ link register save eliminated.
 469:App/Src/minicheetah_motor.c ****     bool is_error_set = (motor[m].error_code & error_word) == error_word;
 452              		.loc 1 469 5 view .LVU139
 453              		.loc 1 469 34 is_stmt 0 view .LVU140
 454 0000 054B     		ldr	r3, .L26
 455 0002 EC22     		movs	r2, #236
 456 0004 02FB0033 		mla	r3, r2, r0, r3
 457 0008 B3F87230 		ldrh	r3, [r3, #114]
 458              		.loc 1 469 10 view .LVU141
 459 000c 31EA0303 		bics	r3, r1, r3
 460              	.LVL18:
 470:App/Src/minicheetah_motor.c ****     return is_error_set;
 461              		.loc 1 470 5 is_stmt 1 view .LVU142
 471:App/Src/minicheetah_motor.c **** }
 462              		.loc 1 471 1 is_stmt 0 view .LVU143
 463 0010 0CBF     		ite	eq
 464 0012 0120     		moveq	r0, #1
 465              	.LVL19:
 466              		.loc 1 471 1 view .LVU144
 467 0014 0020     		movne	r0, #0
 468 0016 7047     		bx	lr
 469              	.L27:
 470              		.align	2
 471              	.L26:
 472 0018 00000000 		.word	.LANCHOR0
 473              		.cfi_endproc
 474              	.LFE150:
 476              		.section	.text.fminf,"ax",%progbits
 477              		.align	1
 478              		.global	fminf
 479              		.syntax unified
 480              		.thumb
 481              		.thumb_func
 483              	fminf:
 484              	.LVL20:
 485              	.LFB151:
 472:App/Src/minicheetah_motor.c **** 
 473:App/Src/minicheetah_motor.c **** 
 474:App/Src/minicheetah_motor.c **** float fminf(float x, float y){
 486              		.loc 1 474 30 is_stmt 1 view -0
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccYfoX6L.s 			page 18


 489              		@ frame_needed = 0, uses_anonymous_args = 0
 490              		@ link register save eliminated.
 491              		.loc 1 474 30 is_stmt 0 view .LVU146
 492 0000 F0EE407A 		vmov.f32	s15, s0
 493 0004 B0EE600A 		vmov.f32	s0, s1
 494              	.LVL21:
 475:App/Src/minicheetah_motor.c ****     return (((x) < (y)) ? (x) : (y));
 495              		.loc 1 475 5 is_stmt 1 view .LVU147
 496              		.loc 1 475 31 is_stmt 0 view .LVU148
 497 0008 F4EEE07A 		vcmpe.f32	s15, s1
 498 000c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 499 0010 01D5     		bpl	.L29
 500 0012 B0EE670A 		vmov.f32	s0, s15
 501              	.L29:
 476:App/Src/minicheetah_motor.c **** }
 502              		.loc 1 476 1 discriminator 4 view .LVU149
 503 0016 7047     		bx	lr
 504              		.cfi_endproc
 505              	.LFE151:
 507              		.section	.text.fmaxf,"ax",%progbits
 508              		.align	1
 509              		.global	fmaxf
 510              		.syntax unified
 511              		.thumb
 512              		.thumb_func
 514              	fmaxf:
 515              	.LVL22:
 516              	.LFB152:
 477:App/Src/minicheetah_motor.c **** 
 478:App/Src/minicheetah_motor.c **** float fmaxf(float x, float y){
 517              		.loc 1 478 30 is_stmt 1 view -0
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 0
 520              		@ frame_needed = 0, uses_anonymous_args = 0
 521              		@ link register save eliminated.
 522              		.loc 1 478 30 is_stmt 0 view .LVU151
 523 0000 F0EE407A 		vmov.f32	s15, s0
 524 0004 B0EE600A 		vmov.f32	s0, s1
 525              	.LVL23:
 479:App/Src/minicheetah_motor.c ****     return (((x) > (y)) ? (x) : (y));
 526              		.loc 1 479 5 is_stmt 1 view .LVU152
 527              		.loc 1 479 31 is_stmt 0 view .LVU153
 528 0008 F4EEE07A 		vcmpe.f32	s15, s1
 529 000c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 530 0010 01DD     		ble	.L33
 531 0012 B0EE670A 		vmov.f32	s0, s15
 532              	.L33:
 480:App/Src/minicheetah_motor.c **** }
 533              		.loc 1 480 1 discriminator 4 view .LVU154
 534 0016 7047     		bx	lr
 535              		.cfi_endproc
 536              	.LFE152:
 538              		.section	.text.float2uint,"ax",%progbits
 539              		.align	1
 540              		.global	float2uint
 541              		.syntax unified
 542              		.thumb
ARM GAS  /tmp/ccYfoX6L.s 			page 19


 543              		.thumb_func
 545              	float2uint:
 546              	.LVL24:
 547              	.LFB153:
 481:App/Src/minicheetah_motor.c **** 
 482:App/Src/minicheetah_motor.c **** int float2uint(float x, float x_min, float x_max, int bits)
 483:App/Src/minicheetah_motor.c **** {
 548              		.loc 1 483 1 is_stmt 1 view -0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 0
 551              		@ frame_needed = 0, uses_anonymous_args = 0
 552              		@ link register save eliminated.
 484:App/Src/minicheetah_motor.c ****     float span = x_max - x_min;
 553              		.loc 1 484 5 view .LVU156
 554              		.loc 1 484 11 is_stmt 0 view .LVU157
 555 0000 31EE601A 		vsub.f32	s2, s2, s1
 556              	.LVL25:
 485:App/Src/minicheetah_motor.c ****     float offset = x_min;
 557              		.loc 1 485 5 is_stmt 1 view .LVU158
 486:App/Src/minicheetah_motor.c ****     return (int) ((x - offset) * ((float)((1<<bits)-1))/span);
 558              		.loc 1 486 5 view .LVU159
 559              		.loc 1 486 22 is_stmt 0 view .LVU160
 560 0004 30EE600A 		vsub.f32	s0, s0, s1
 561              	.LVL26:
 562              		.loc 1 486 45 view .LVU161
 563 0008 0123     		movs	r3, #1
 564 000a 8340     		lsls	r3, r3, r0
 565              		.loc 1 486 52 view .LVU162
 566 000c 013B     		subs	r3, r3, #1
 567              		.loc 1 486 35 view .LVU163
 568 000e 07EE903A 		vmov	s15, r3	@ int
 569 0012 F8EEE77A 		vcvt.f32.s32	s15, s15
 570              		.loc 1 486 32 view .LVU164
 571 0016 60EE277A 		vmul.f32	s15, s0, s15
 572              		.loc 1 486 56 view .LVU165
 573 001a 87EE817A 		vdiv.f32	s14, s15, s2
 487:App/Src/minicheetah_motor.c **** }
 574              		.loc 1 487 1 view .LVU166
 575 001e FDEEC77A 		vcvt.s32.f32	s15, s14
 576 0022 17EE900A 		vmov	r0, s15	@ int
 577              	.LVL27:
 578              		.loc 1 487 1 view .LVU167
 579 0026 7047     		bx	lr
 580              		.cfi_endproc
 581              	.LFE153:
 583              		.section	.text._pack_cmd,"ax",%progbits
 584              		.align	1
 585              		.global	_pack_cmd
 586              		.syntax unified
 587              		.thumb
 588              		.thumb_func
 590              	_pack_cmd:
 591              	.LVL28:
 592              	.LFB148:
 376:App/Src/minicheetah_motor.c ****     /*  
 593              		.loc 1 376 1 is_stmt 1 view -0
 594              		.cfi_startproc
ARM GAS  /tmp/ccYfoX6L.s 			page 20


 595              		@ args = 0, pretend = 0, frame = 0
 596              		@ frame_needed = 0, uses_anonymous_args = 0
 376:App/Src/minicheetah_motor.c ****     /*  
 597              		.loc 1 376 1 is_stmt 0 view .LVU169
 598 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 599              	.LCFI3:
 600              		.cfi_def_cfa_offset 24
 601              		.cfi_offset 4, -24
 602              		.cfi_offset 5, -20
 603              		.cfi_offset 6, -16
 604              		.cfi_offset 7, -12
 605              		.cfi_offset 8, -8
 606              		.cfi_offset 14, -4
 607 0004 2DED108B 		vpush.64	{d8, d9, d10, d11, d12, d13, d14, d15}
 608              	.LCFI4:
 609              		.cfi_def_cfa_offset 88
 610              		.cfi_offset 80, -88
 611              		.cfi_offset 81, -84
 612              		.cfi_offset 82, -80
 613              		.cfi_offset 83, -76
 614              		.cfi_offset 84, -72
 615              		.cfi_offset 85, -68
 616              		.cfi_offset 86, -64
 617              		.cfi_offset 87, -60
 618              		.cfi_offset 88, -56
 619              		.cfi_offset 89, -52
 620              		.cfi_offset 90, -48
 621              		.cfi_offset 91, -44
 622              		.cfi_offset 92, -40
 623              		.cfi_offset 93, -36
 624              		.cfi_offset 94, -32
 625              		.cfi_offset 95, -28
 398:App/Src/minicheetah_motor.c ****     float v_des = fminf(fmaxf(motor[m].params.v.min, motor[m].cmd.v_des), motor[m].params.v.max);
 626              		.loc 1 398 5 is_stmt 1 view .LVU170
 398:App/Src/minicheetah_motor.c ****     float v_des = fminf(fmaxf(motor[m].params.v.min, motor[m].cmd.v_des), motor[m].params.v.max);
 627              		.loc 1 398 19 is_stmt 0 view .LVU171
 628 0008 514C     		ldr	r4, .L39
 629 000a EC23     		movs	r3, #236
 630 000c 03FB0044 		mla	r4, r3, r0, r4
 631 0010 94ED01EA 		vldr.32	s28, [r4, #4]
 632 0014 D4ED130A 		vldr.32	s1, [r4, #76]
 633 0018 B0EE4E0A 		vmov.f32	s0, s28
 634 001c FFF7FEFF 		bl	fmaxf
 635              	.LVL29:
 398:App/Src/minicheetah_motor.c ****     float v_des = fminf(fmaxf(motor[m].params.v.min, motor[m].cmd.v_des), motor[m].params.v.max);
 636              		.loc 1 398 19 view .LVU172
 637 0020 D4ED02EA 		vldr.32	s29, [r4, #8]
 638 0024 F0EE6E0A 		vmov.f32	s1, s29
 639 0028 FFF7FEFF 		bl	fminf
 640              	.LVL30:
 641 002c B0EE40AA 		vmov.f32	s20, s0
 642              	.LVL31:
 399:App/Src/minicheetah_motor.c ****     float kp    = fminf(fmaxf(motor[m].params.kp.min,    motor[m].cmd.kp   ), motor[m].params.kp.ma
 643              		.loc 1 399 5 is_stmt 1 view .LVU173
 399:App/Src/minicheetah_motor.c ****     float kp    = fminf(fmaxf(motor[m].params.kp.min,    motor[m].cmd.kp   ), motor[m].params.kp.ma
 644              		.loc 1 399 19 is_stmt 0 view .LVU174
 645 0030 94ED03DA 		vldr.32	s26, [r4, #12]
ARM GAS  /tmp/ccYfoX6L.s 			page 21


 646 0034 D4ED140A 		vldr.32	s1, [r4, #80]
 647 0038 B0EE4D0A 		vmov.f32	s0, s26
 648              	.LVL32:
 399:App/Src/minicheetah_motor.c ****     float kp    = fminf(fmaxf(motor[m].params.kp.min,    motor[m].cmd.kp   ), motor[m].params.kp.ma
 649              		.loc 1 399 19 view .LVU175
 650 003c FFF7FEFF 		bl	fmaxf
 651              	.LVL33:
 652 0040 D4ED04DA 		vldr.32	s27, [r4, #16]
 653 0044 F0EE6D0A 		vmov.f32	s1, s27
 654 0048 FFF7FEFF 		bl	fminf
 655              	.LVL34:
 656 004c F0EE409A 		vmov.f32	s19, s0
 657              	.LVL35:
 400:App/Src/minicheetah_motor.c ****     float kd    = fminf(fmaxf(motor[m].params.kd.min,    motor[m].cmd.kd   ), motor[m].params.kd.ma
 658              		.loc 1 400 5 is_stmt 1 view .LVU176
 400:App/Src/minicheetah_motor.c ****     float kd    = fminf(fmaxf(motor[m].params.kd.min,    motor[m].cmd.kd   ), motor[m].params.kd.ma
 659              		.loc 1 400 19 is_stmt 0 view .LVU177
 660 0050 94ED05CA 		vldr.32	s24, [r4, #20]
 661 0054 D4ED150A 		vldr.32	s1, [r4, #84]
 662 0058 B0EE4C0A 		vmov.f32	s0, s24
 663              	.LVL36:
 400:App/Src/minicheetah_motor.c ****     float kd    = fminf(fmaxf(motor[m].params.kd.min,    motor[m].cmd.kd   ), motor[m].params.kd.ma
 664              		.loc 1 400 19 view .LVU178
 665 005c FFF7FEFF 		bl	fmaxf
 666              	.LVL37:
 667 0060 D4ED06CA 		vldr.32	s25, [r4, #24]
 668 0064 F0EE6C0A 		vmov.f32	s1, s25
 669 0068 FFF7FEFF 		bl	fminf
 670              	.LVL38:
 671 006c B0EE409A 		vmov.f32	s18, s0
 672              	.LVL39:
 401:App/Src/minicheetah_motor.c ****     float iff   = fminf(fmaxf(motor[m].params.i_ff.min,  motor[m].cmd.iff  ), motor[m].params.i_ff.
 673              		.loc 1 401 5 is_stmt 1 view .LVU179
 401:App/Src/minicheetah_motor.c ****     float iff   = fminf(fmaxf(motor[m].params.i_ff.min,  motor[m].cmd.iff  ), motor[m].params.i_ff.
 674              		.loc 1 401 19 is_stmt 0 view .LVU180
 675 0070 94ED07BA 		vldr.32	s22, [r4, #28]
 676 0074 D4ED160A 		vldr.32	s1, [r4, #88]
 677 0078 B0EE4B0A 		vmov.f32	s0, s22
 678              	.LVL40:
 401:App/Src/minicheetah_motor.c ****     float iff   = fminf(fmaxf(motor[m].params.i_ff.min,  motor[m].cmd.iff  ), motor[m].params.i_ff.
 679              		.loc 1 401 19 view .LVU181
 680 007c FFF7FEFF 		bl	fmaxf
 681              	.LVL41:
 682 0080 D4ED08BA 		vldr.32	s23, [r4, #32]
 683 0084 F0EE6B0A 		vmov.f32	s1, s23
 684 0088 FFF7FEFF 		bl	fminf
 685              	.LVL42:
 686 008c F0EE408A 		vmov.f32	s17, s0
 687              	.LVL43:
 402:App/Src/minicheetah_motor.c **** 
 688              		.loc 1 402 5 is_stmt 1 view .LVU182
 402:App/Src/minicheetah_motor.c **** 
 689              		.loc 1 402 19 is_stmt 0 view .LVU183
 690 0090 D4ED09AA 		vldr.32	s21, [r4, #36]
 691 0094 D4ED170A 		vldr.32	s1, [r4, #92]
 692 0098 B0EE6A0A 		vmov.f32	s0, s21
 693              	.LVL44:
ARM GAS  /tmp/ccYfoX6L.s 			page 22


 402:App/Src/minicheetah_motor.c **** 
 694              		.loc 1 402 19 view .LVU184
 695 009c FFF7FEFF 		bl	fmaxf
 696              	.LVL45:
 697 00a0 94ED0AFA 		vldr.32	s30, [r4, #40]
 698 00a4 F0EE4F0A 		vmov.f32	s1, s30
 699 00a8 FFF7FEFF 		bl	fminf
 700              	.LVL46:
 701 00ac B0EE408A 		vmov.f32	s16, s0
 702              	.LVL47:
 405:App/Src/minicheetah_motor.c ****     int v_int   = float2uint(v_des, motor[m].params.v.min, motor[m].params.v.max, 12);
 703              		.loc 1 405 5 is_stmt 1 view .LVU185
 405:App/Src/minicheetah_motor.c ****     int v_int   = float2uint(v_des, motor[m].params.v.min, motor[m].params.v.max, 12);
 704              		.loc 1 405 19 is_stmt 0 view .LVU186
 705 00b0 1020     		movs	r0, #16
 706 00b2 B0EE6E1A 		vmov.f32	s2, s29
 707 00b6 F0EE4E0A 		vmov.f32	s1, s28
 708 00ba B0EE4A0A 		vmov.f32	s0, s20
 709              	.LVL48:
 405:App/Src/minicheetah_motor.c ****     int v_int   = float2uint(v_des, motor[m].params.v.min, motor[m].params.v.max, 12);
 710              		.loc 1 405 19 view .LVU187
 711 00be FFF7FEFF 		bl	float2uint
 712              	.LVL49:
 713 00c2 8046     		mov	r8, r0
 714              	.LVL50:
 406:App/Src/minicheetah_motor.c ****     int kp_int  = float2uint(kp,    motor[m].params.kp.min,    motor[m].params.kp.max   , 12);
 715              		.loc 1 406 5 is_stmt 1 view .LVU188
 406:App/Src/minicheetah_motor.c ****     int kp_int  = float2uint(kp,    motor[m].params.kp.min,    motor[m].params.kp.max   , 12);
 716              		.loc 1 406 19 is_stmt 0 view .LVU189
 717 00c4 0C20     		movs	r0, #12
 718              	.LVL51:
 406:App/Src/minicheetah_motor.c ****     int kp_int  = float2uint(kp,    motor[m].params.kp.min,    motor[m].params.kp.max   , 12);
 719              		.loc 1 406 19 view .LVU190
 720 00c6 B0EE6D1A 		vmov.f32	s2, s27
 721 00ca F0EE4D0A 		vmov.f32	s1, s26
 722 00ce B0EE690A 		vmov.f32	s0, s19
 723 00d2 FFF7FEFF 		bl	float2uint
 724              	.LVL52:
 725 00d6 0746     		mov	r7, r0
 726              	.LVL53:
 407:App/Src/minicheetah_motor.c ****     int kd_int  = float2uint(kd,    motor[m].params.kd.min,    motor[m].params.kd.max   , 12);
 727              		.loc 1 407 5 is_stmt 1 view .LVU191
 407:App/Src/minicheetah_motor.c ****     int kd_int  = float2uint(kd,    motor[m].params.kd.min,    motor[m].params.kd.max   , 12);
 728              		.loc 1 407 19 is_stmt 0 view .LVU192
 729 00d8 0C20     		movs	r0, #12
 730              	.LVL54:
 407:App/Src/minicheetah_motor.c ****     int kd_int  = float2uint(kd,    motor[m].params.kd.min,    motor[m].params.kd.max   , 12);
 731              		.loc 1 407 19 view .LVU193
 732 00da B0EE6C1A 		vmov.f32	s2, s25
 733 00de F0EE4C0A 		vmov.f32	s1, s24
 734 00e2 B0EE490A 		vmov.f32	s0, s18
 735 00e6 FFF7FEFF 		bl	float2uint
 736              	.LVL55:
 737 00ea 0646     		mov	r6, r0
 738              	.LVL56:
 408:App/Src/minicheetah_motor.c ****     int iff_int = float2uint(iff,   motor[m].params.i_ff.min,  motor[m].params.i_ff.max , 12);
 739              		.loc 1 408 5 is_stmt 1 view .LVU194
ARM GAS  /tmp/ccYfoX6L.s 			page 23


 408:App/Src/minicheetah_motor.c ****     int iff_int = float2uint(iff,   motor[m].params.i_ff.min,  motor[m].params.i_ff.max , 12);
 740              		.loc 1 408 19 is_stmt 0 view .LVU195
 741 00ec 0C20     		movs	r0, #12
 742              	.LVL57:
 408:App/Src/minicheetah_motor.c ****     int iff_int = float2uint(iff,   motor[m].params.i_ff.min,  motor[m].params.i_ff.max , 12);
 743              		.loc 1 408 19 view .LVU196
 744 00ee B0EE6B1A 		vmov.f32	s2, s23
 745 00f2 F0EE4B0A 		vmov.f32	s1, s22
 746 00f6 B0EE680A 		vmov.f32	s0, s17
 747 00fa FFF7FEFF 		bl	float2uint
 748              	.LVL58:
 749 00fe 0546     		mov	r5, r0
 750              	.LVL59:
 409:App/Src/minicheetah_motor.c **** 
 751              		.loc 1 409 5 is_stmt 1 view .LVU197
 409:App/Src/minicheetah_motor.c **** 
 752              		.loc 1 409 19 is_stmt 0 view .LVU198
 753 0100 0C20     		movs	r0, #12
 754              	.LVL60:
 409:App/Src/minicheetah_motor.c **** 
 755              		.loc 1 409 19 view .LVU199
 756 0102 B0EE4F1A 		vmov.f32	s2, s30
 757 0106 F0EE6A0A 		vmov.f32	s1, s21
 758 010a B0EE480A 		vmov.f32	s0, s16
 759 010e FFF7FEFF 		bl	float2uint
 760              	.LVL61:
 761 0112 0346     		mov	r3, r0
 762              	.LVL62:
 411:App/Src/minicheetah_motor.c ****     motor[m].canTx.data[1] = p_int & 0xFF;
 763              		.loc 1 411 5 is_stmt 1 view .LVU200
 411:App/Src/minicheetah_motor.c ****     motor[m].canTx.data[1] = p_int & 0xFF;
 764              		.loc 1 411 36 is_stmt 0 view .LVU201
 765 0114 4FEA2822 		asr	r2, r8, #8
 411:App/Src/minicheetah_motor.c ****     motor[m].canTx.data[1] = p_int & 0xFF;
 766              		.loc 1 411 28 view .LVU202
 767 0118 84F8C420 		strb	r2, [r4, #196]
 412:App/Src/minicheetah_motor.c ****     motor[m].canTx.data[2] = v_int >> 4;
 768              		.loc 1 412 5 is_stmt 1 view .LVU203
 412:App/Src/minicheetah_motor.c ****     motor[m].canTx.data[2] = v_int >> 4;
 769              		.loc 1 412 28 is_stmt 0 view .LVU204
 770 011c 84F8C580 		strb	r8, [r4, #197]
 413:App/Src/minicheetah_motor.c ****     motor[m].canTx.data[3] = ((v_int&0xF)<<4) | (kp_int>>8);
 771              		.loc 1 413 5 is_stmt 1 view .LVU205
 413:App/Src/minicheetah_motor.c ****     motor[m].canTx.data[3] = ((v_int&0xF)<<4) | (kp_int>>8);
 772              		.loc 1 413 36 is_stmt 0 view .LVU206
 773 0120 3A11     		asrs	r2, r7, #4
 413:App/Src/minicheetah_motor.c ****     motor[m].canTx.data[3] = ((v_int&0xF)<<4) | (kp_int>>8);
 774              		.loc 1 413 28 view .LVU207
 775 0122 84F8C620 		strb	r2, [r4, #198]
 414:App/Src/minicheetah_motor.c ****     motor[m].canTx.data[4] = kp_int&0xFF;
 776              		.loc 1 414 5 is_stmt 1 view .LVU208
 414:App/Src/minicheetah_motor.c ****     motor[m].canTx.data[4] = kp_int&0xFF;
 777              		.loc 1 414 56 is_stmt 0 view .LVU209
 778 0126 3012     		asrs	r0, r6, #8
 779              	.LVL63:
 414:App/Src/minicheetah_motor.c ****     motor[m].canTx.data[4] = kp_int&0xFF;
 780              		.loc 1 414 47 view .LVU210
ARM GAS  /tmp/ccYfoX6L.s 			page 24


 781 0128 40EA0717 		orr	r7, r0, r7, lsl #4
 782              	.LVL64:
 414:App/Src/minicheetah_motor.c ****     motor[m].canTx.data[4] = kp_int&0xFF;
 783              		.loc 1 414 28 view .LVU211
 784 012c 84F8C770 		strb	r7, [r4, #199]
 415:App/Src/minicheetah_motor.c ****     motor[m].canTx.data[5] = kd_int>>4;
 785              		.loc 1 415 5 is_stmt 1 view .LVU212
 415:App/Src/minicheetah_motor.c ****     motor[m].canTx.data[5] = kd_int>>4;
 786              		.loc 1 415 28 is_stmt 0 view .LVU213
 787 0130 84F8C860 		strb	r6, [r4, #200]
 416:App/Src/minicheetah_motor.c ****     motor[m].canTx.data[6] = ((kd_int&0xF)<<4) | (iff_int>>8);
 788              		.loc 1 416 5 is_stmt 1 view .LVU214
 416:App/Src/minicheetah_motor.c ****     motor[m].canTx.data[6] = ((kd_int&0xF)<<4) | (iff_int>>8);
 789              		.loc 1 416 36 is_stmt 0 view .LVU215
 790 0134 2A11     		asrs	r2, r5, #4
 416:App/Src/minicheetah_motor.c ****     motor[m].canTx.data[6] = ((kd_int&0xF)<<4) | (iff_int>>8);
 791              		.loc 1 416 28 view .LVU216
 792 0136 84F8C920 		strb	r2, [r4, #201]
 417:App/Src/minicheetah_motor.c ****     motor[m].canTx.data[7] = iff_int&0xFF;
 793              		.loc 1 417 5 is_stmt 1 view .LVU217
 417:App/Src/minicheetah_motor.c ****     motor[m].canTx.data[7] = iff_int&0xFF;
 794              		.loc 1 417 58 is_stmt 0 view .LVU218
 795 013a 1812     		asrs	r0, r3, #8
 417:App/Src/minicheetah_motor.c ****     motor[m].canTx.data[7] = iff_int&0xFF;
 796              		.loc 1 417 48 view .LVU219
 797 013c 40EA0515 		orr	r5, r0, r5, lsl #4
 798              	.LVL65:
 417:App/Src/minicheetah_motor.c ****     motor[m].canTx.data[7] = iff_int&0xFF;
 799              		.loc 1 417 28 view .LVU220
 800 0140 84F8CA50 		strb	r5, [r4, #202]
 418:App/Src/minicheetah_motor.c **** }
 801              		.loc 1 418 5 is_stmt 1 view .LVU221
 418:App/Src/minicheetah_motor.c **** }
 802              		.loc 1 418 28 is_stmt 0 view .LVU222
 803 0144 84F8CB30 		strb	r3, [r4, #203]
 419:App/Src/minicheetah_motor.c **** 
 804              		.loc 1 419 1 view .LVU223
 805 0148 BDEC108B 		vldm	sp!, {d8-d15}
 806              	.LCFI5:
 807              		.cfi_restore 94
 808              		.cfi_restore 95
 809              		.cfi_restore 92
 810              		.cfi_restore 93
 811              		.cfi_restore 90
 812              		.cfi_restore 91
 813              		.cfi_restore 88
 814              		.cfi_restore 89
 815              		.cfi_restore 86
 816              		.cfi_restore 87
 817              		.cfi_restore 84
 818              		.cfi_restore 85
 819              		.cfi_restore 82
 820              		.cfi_restore 83
 821              		.cfi_restore 80
 822              		.cfi_restore 81
 823              		.cfi_def_cfa_offset 24
 824              	.LVL66:
ARM GAS  /tmp/ccYfoX6L.s 			page 25


 419:App/Src/minicheetah_motor.c **** 
 825              		.loc 1 419 1 view .LVU224
 826 014c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 827              	.LVL67:
 828              	.L40:
 419:App/Src/minicheetah_motor.c **** 
 829              		.loc 1 419 1 view .LVU225
 830              		.align	2
 831              	.L39:
 832 0150 00000000 		.word	.LANCHOR0
 833              		.cfi_endproc
 834              	.LFE148:
 836              		.section	.text.uint2float,"ax",%progbits
 837              		.align	1
 838              		.global	uint2float
 839              		.syntax unified
 840              		.thumb
 841              		.thumb_func
 843              	uint2float:
 844              	.LVL68:
 845              	.LFB154:
 488:App/Src/minicheetah_motor.c **** 
 489:App/Src/minicheetah_motor.c **** float uint2float(int x_int, float x_min, float x_max, int bits)
 490:App/Src/minicheetah_motor.c **** {
 846              		.loc 1 490 1 is_stmt 1 view -0
 847              		.cfi_startproc
 848              		@ args = 0, pretend = 0, frame = 0
 849              		@ frame_needed = 0, uses_anonymous_args = 0
 850              		@ link register save eliminated.
 851              		.loc 1 490 1 is_stmt 0 view .LVU227
 852 0000 07EE900A 		vmov	s15, r0	@ int
 491:App/Src/minicheetah_motor.c ****     float span = x_max = x_min;
 853              		.loc 1 491 5 is_stmt 1 view .LVU228
 854              	.LVL69:
 492:App/Src/minicheetah_motor.c ****     float offset = x_min;
 855              		.loc 1 492 5 view .LVU229
 493:App/Src/minicheetah_motor.c ****     return ((float)x_int)*span/((float)((1<<bits)-1)) + offset;
 856              		.loc 1 493 5 view .LVU230
 857              		.loc 1 493 13 is_stmt 0 view .LVU231
 858 0004 F8EEE77A 		vcvt.f32.s32	s15, s15
 859              		.loc 1 493 26 view .LVU232
 860 0008 27EE807A 		vmul.f32	s14, s15, s0
 861              		.loc 1 493 43 view .LVU233
 862 000c 0123     		movs	r3, #1
 863 000e 8B40     		lsls	r3, r3, r1
 864              		.loc 1 493 50 view .LVU234
 865 0010 013B     		subs	r3, r3, #1
 866              		.loc 1 493 33 view .LVU235
 867 0012 07EE903A 		vmov	s15, r3	@ int
 868 0016 F8EEE77A 		vcvt.f32.s32	s15, s15
 869              		.loc 1 493 31 view .LVU236
 870 001a C7EE276A 		vdiv.f32	s13, s14, s15
 494:App/Src/minicheetah_motor.c **** }...
 871              		.loc 1 494 1 view .LVU237
 872 001e 36EE800A 		vadd.f32	s0, s13, s0
 873              	.LVL70:
 874              		.loc 1 494 1 view .LVU238
ARM GAS  /tmp/ccYfoX6L.s 			page 26


 875 0022 7047     		bx	lr
 876              		.cfi_endproc
 877              	.LFE154:
 879              		.section	.text._unpack_canRx,"ax",%progbits
 880              		.align	1
 881              		.global	_unpack_canRx
 882              		.syntax unified
 883              		.thumb
 884              		.thumb_func
 886              	_unpack_canRx:
 887              	.LVL71:
 888              	.LFB149:
 427:App/Src/minicheetah_motor.c **** {
 889              		.loc 1 427 1 is_stmt 1 view -0
 890              		.cfi_startproc
 891              		@ args = 0, pretend = 0, frame = 0
 892              		@ frame_needed = 0, uses_anonymous_args = 0
 427:App/Src/minicheetah_motor.c **** {
 893              		.loc 1 427 1 is_stmt 0 view .LVU240
 894 0000 70B5     		push	{r4, r5, r6, lr}
 895              	.LCFI6:
 896              		.cfi_def_cfa_offset 16
 897              		.cfi_offset 4, -16
 898              		.cfi_offset 5, -12
 899              		.cfi_offset 6, -8
 900              		.cfi_offset 14, -4
 445:App/Src/minicheetah_motor.c ****     int p_int  = (motor[m].canRx.data[1] << 8) | motor[m].canRx.data[2];
 901              		.loc 1 445 5 is_stmt 1 view .LVU241
 445:App/Src/minicheetah_motor.c ****     int p_int  = (motor[m].canRx.data[1] << 8) | motor[m].canRx.data[2];
 902              		.loc 1 445 38 is_stmt 0 view .LVU242
 903 0002 1A4C     		ldr	r4, .L44
 904 0004 EC23     		movs	r3, #236
 905 0006 03FB0044 		mla	r4, r3, r0, r4
 906 000a 94F87900 		ldrb	r0, [r4, #121]	@ zero_extendqisi2
 907              	.LVL72:
 445:App/Src/minicheetah_motor.c ****     int p_int  = (motor[m].canRx.data[1] << 8) | motor[m].canRx.data[2];
 908              		.loc 1 445 69 view .LVU243
 909 000e 94F87A20 		ldrb	r2, [r4, #122]	@ zero_extendqisi2
 910              	.LVL73:
 446:App/Src/minicheetah_motor.c ****     int v_int  = (motor[m].canRx.data[3] << 4) | motor[m].canRx.data[4]>>4;
 911              		.loc 1 446 5 is_stmt 1 view .LVU244
 446:App/Src/minicheetah_motor.c ****     int v_int  = (motor[m].canRx.data[3] << 4) | motor[m].canRx.data[4]>>4;
 912              		.loc 1 446 38 is_stmt 0 view .LVU245
 913 0012 94F87B10 		ldrb	r1, [r4, #123]	@ zero_extendqisi2
 446:App/Src/minicheetah_motor.c ****     int v_int  = (motor[m].canRx.data[3] << 4) | motor[m].canRx.data[4]>>4;
 914              		.loc 1 446 69 view .LVU246
 915 0016 94F87C30 		ldrb	r3, [r4, #124]	@ zero_extendqisi2
 446:App/Src/minicheetah_motor.c ****     int v_int  = (motor[m].canRx.data[3] << 4) | motor[m].canRx.data[4]>>4;
 916              		.loc 1 446 72 view .LVU247
 917 001a 1E09     		lsrs	r6, r3, #4
 446:App/Src/minicheetah_motor.c ****     int v_int  = (motor[m].canRx.data[3] << 4) | motor[m].canRx.data[4]>>4;
 918              		.loc 1 446 9 view .LVU248
 919 001c 46EA0116 		orr	r6, r6, r1, lsl #4
 920              	.LVL74:
 447:App/Src/minicheetah_motor.c ****     int i_int  = ((motor[m].canRx.data[4]&0xF)<<8) | motor[m].canRx.data[5];
 921              		.loc 1 447 5 is_stmt 1 view .LVU249
 447:App/Src/minicheetah_motor.c ****     int i_int  = ((motor[m].canRx.data[4]&0xF)<<8) | motor[m].canRx.data[5];
ARM GAS  /tmp/ccYfoX6L.s 			page 27


 922              		.loc 1 447 47 is_stmt 0 view .LVU250
 923 0020 1D02     		lsls	r5, r3, #8
 924 0022 05F47065 		and	r5, r5, #3840
 447:App/Src/minicheetah_motor.c ****     int i_int  = ((motor[m].canRx.data[4]&0xF)<<8) | motor[m].canRx.data[5];
 925              		.loc 1 447 73 view .LVU251
 926 0026 94F87D30 		ldrb	r3, [r4, #125]	@ zero_extendqisi2
 447:App/Src/minicheetah_motor.c ****     int i_int  = ((motor[m].canRx.data[4]&0xF)<<8) | motor[m].canRx.data[5];
 927              		.loc 1 447 9 view .LVU252
 928 002a 1D43     		orrs	r5, r5, r3
 929              	.LVL75:
 450:App/Src/minicheetah_motor.c ****     motor[m].feedback.position = uint2float(p_int, motor[m].params.p.min, motor[m].params.p.max, 16
 930              		.loc 1 450 5 is_stmt 1 view .LVU253
 450:App/Src/minicheetah_motor.c ****     motor[m].feedback.position = uint2float(p_int, motor[m].params.p.min, motor[m].params.p.max, 16
 931              		.loc 1 450 34 is_stmt 0 view .LVU254
 932 002c 1021     		movs	r1, #16
 933 002e D4ED020A 		vldr.32	s1, [r4, #8]
 934 0032 94ED010A 		vldr.32	s0, [r4, #4]
 935 0036 42EA0020 		orr	r0, r2, r0, lsl #8
 936              	.LVL76:
 450:App/Src/minicheetah_motor.c ****     motor[m].feedback.position = uint2float(p_int, motor[m].params.p.min, motor[m].params.p.max, 16
 937              		.loc 1 450 34 view .LVU255
 938 003a FFF7FEFF 		bl	uint2float
 939              	.LVL77:
 450:App/Src/minicheetah_motor.c ****     motor[m].feedback.position = uint2float(p_int, motor[m].params.p.min, motor[m].params.p.max, 16
 940              		.loc 1 450 32 view .LVU256
 941 003e 84ED180A 		vstr.32	s0, [r4, #96]
 451:App/Src/minicheetah_motor.c ****     motor[m].feedback.velocity = uint2float(v_int, motor[m].params.v.min, motor[m].params.v.max, 12
 942              		.loc 1 451 5 is_stmt 1 view .LVU257
 451:App/Src/minicheetah_motor.c ****     motor[m].feedback.velocity = uint2float(v_int, motor[m].params.v.min, motor[m].params.v.max, 12
 943              		.loc 1 451 34 is_stmt 0 view .LVU258
 944 0042 0C21     		movs	r1, #12
 945 0044 D4ED040A 		vldr.32	s1, [r4, #16]
 946 0048 94ED030A 		vldr.32	s0, [r4, #12]
 947 004c 3046     		mov	r0, r6
 948 004e FFF7FEFF 		bl	uint2float
 949              	.LVL78:
 451:App/Src/minicheetah_motor.c ****     motor[m].feedback.velocity = uint2float(v_int, motor[m].params.v.min, motor[m].params.v.max, 12
 950              		.loc 1 451 32 view .LVU259
 951 0052 84ED190A 		vstr.32	s0, [r4, #100]
 452:App/Src/minicheetah_motor.c ****     motor[m].feedback.current  = uint2float(i_int, motor[m].params.i_ff.min,  motor[m].params.i_ff.
 952              		.loc 1 452 5 is_stmt 1 view .LVU260
 452:App/Src/minicheetah_motor.c ****     motor[m].feedback.current  = uint2float(i_int, motor[m].params.i_ff.min,  motor[m].params.i_ff.
 953              		.loc 1 452 34 is_stmt 0 view .LVU261
 954 0056 0C21     		movs	r1, #12
 955 0058 D4ED0A0A 		vldr.32	s1, [r4, #40]
 956 005c 94ED090A 		vldr.32	s0, [r4, #36]
 957 0060 2846     		mov	r0, r5
 958 0062 FFF7FEFF 		bl	uint2float
 959              	.LVL79:
 452:App/Src/minicheetah_motor.c ****     motor[m].feedback.current  = uint2float(i_int, motor[m].params.i_ff.min,  motor[m].params.i_ff.
 960              		.loc 1 452 32 view .LVU262
 961 0066 84ED1A0A 		vstr.32	s0, [r4, #104]
 453:App/Src/minicheetah_motor.c ****     if (NUM_OF_CAN_RX_BYTES == 7){
 962              		.loc 1 453 5 is_stmt 1 view .LVU263
 457:App/Src/minicheetah_motor.c **** }
 963              		.loc 1 457 1 is_stmt 0 view .LVU264
 964 006a 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/ccYfoX6L.s 			page 28


 965              	.LVL80:
 966              	.L45:
 457:App/Src/minicheetah_motor.c **** }
 967              		.loc 1 457 1 view .LVU265
 968              		.align	2
 969              	.L44:
 970 006c 00000000 		.word	.LANCHOR0
 971              		.cfi_endproc
 972              	.LFE149:
 974              		.section	.text.MOTOR_sendTxGetRx,"ax",%progbits
 975              		.align	1
 976              		.global	MOTOR_sendTxGetRx
 977              		.syntax unified
 978              		.thumb
 979              		.thumb_func
 981              	MOTOR_sendTxGetRx:
 982              	.LVL81:
 983              	.LFB143:
 223:App/Src/minicheetah_motor.c **** {
 984              		.loc 1 223 1 is_stmt 1 view -0
 985              		.cfi_startproc
 986              		@ args = 0, pretend = 0, frame = 8
 987              		@ frame_needed = 0, uses_anonymous_args = 0
 223:App/Src/minicheetah_motor.c **** {
 988              		.loc 1 223 1 is_stmt 0 view .LVU267
 989 0000 30B5     		push	{r4, r5, lr}
 990              	.LCFI7:
 991              		.cfi_def_cfa_offset 12
 992              		.cfi_offset 4, -12
 993              		.cfi_offset 5, -8
 994              		.cfi_offset 14, -4
 995 0002 83B0     		sub	sp, sp, #12
 996              	.LCFI8:
 997              		.cfi_def_cfa_offset 24
 998 0004 0546     		mov	r5, r0
 225:App/Src/minicheetah_motor.c ****     if(HAL_CAN_AddTxMessage(motor[m].hcan_ptr, &motor[m].canTx.header, motor[m].canTx.data, &motor[
 999              		.loc 1 225 5 is_stmt 1 view .LVU268
 225:App/Src/minicheetah_motor.c ****     if(HAL_CAN_AddTxMessage(motor[m].hcan_ptr, &motor[m].canTx.header, motor[m].canTx.data, &motor[
 1000              		.loc 1 225 86 is_stmt 0 view .LVU269
 1001 0006 3F4C     		ldr	r4, .L54
 1002 0008 4FF0EC0C 		mov	ip, #236
 1003 000c 0CFB00FC 		mul	ip, ip, r0
 1004 0010 0CF1C002 		add	r2, ip, #192
 1005 0014 2244     		add	r2, r2, r4
 225:App/Src/minicheetah_motor.c ****     if(HAL_CAN_AddTxMessage(motor[m].hcan_ptr, &motor[m].canTx.header, motor[m].canTx.data, &motor[
 1006              		.loc 1 225 8 view .LVU270
 1007 0016 0CF1E003 		add	r3, ip, #224
 1008 001a 2344     		add	r3, r3, r4
 1009 001c 0CF1C801 		add	r1, ip, #200
 1010 0020 2144     		add	r1, r1, r4
 1011 0022 6444     		add	r4, r4, ip
 1012 0024 0433     		adds	r3, r3, #4
 1013 0026 0432     		adds	r2, r2, #4
 1014 0028 0431     		adds	r1, r1, #4
 1015 002a 606F     		ldr	r0, [r4, #116]
 1016              	.LVL82:
 225:App/Src/minicheetah_motor.c ****     if(HAL_CAN_AddTxMessage(motor[m].hcan_ptr, &motor[m].canTx.header, motor[m].canTx.data, &motor[
ARM GAS  /tmp/ccYfoX6L.s 			page 29


 1017              		.loc 1 225 8 view .LVU271
 1018 002c FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 1019              	.LVL83:
 225:App/Src/minicheetah_motor.c ****     if(HAL_CAN_AddTxMessage(motor[m].hcan_ptr, &motor[m].canTx.header, motor[m].canTx.data, &motor[
 1020              		.loc 1 225 7 view .LVU272
 1021 0030 70B1     		cbz	r0, .L52
 270:App/Src/minicheetah_motor.c ****         motor[m].error_code |= MOTOR_ERROR_HAL_CAN; /*!< set HAL_CAN error */
 1022              		.loc 1 270 9 is_stmt 1 view .LVU273
 270:App/Src/minicheetah_motor.c ****         motor[m].error_code |= MOTOR_ERROR_HAL_CAN; /*!< set HAL_CAN error */
 1023              		.loc 1 270 29 is_stmt 0 view .LVU274
 1024 0032 3448     		ldr	r0, .L54
 1025 0034 EC23     		movs	r3, #236
 1026 0036 03FB0505 		mla	r5, r3, r5, r0
 1027 003a B5F87230 		ldrh	r3, [r5, #114]
 1028 003e 43F00403 		orr	r3, r3, #4
 1029 0042 A5F87230 		strh	r3, [r5, #114]	@ movhi
 273:App/Src/minicheetah_motor.c ****         motor[m].state = MOTOR_ERROR; 
 1030              		.loc 1 273 9 is_stmt 1 view .LVU275
 273:App/Src/minicheetah_motor.c ****         motor[m].state = MOTOR_ERROR; 
 1031              		.loc 1 273 24 is_stmt 0 view .LVU276
 1032 0046 0323     		movs	r3, #3
 1033 0048 85F87130 		strb	r3, [r5, #113]
 1034              	.L46:
 275:App/Src/minicheetah_motor.c **** }
 1035              		.loc 1 275 1 view .LVU277
 1036 004c 03B0     		add	sp, sp, #12
 1037              	.LCFI9:
 1038              		.cfi_remember_state
 1039              		.cfi_def_cfa_offset 12
 1040              		@ sp needed
 1041 004e 30BD     		pop	{r4, r5, pc}
 1042              	.L52:
 1043              	.LCFI10:
 1044              		.cfi_restore_state
 1045              	.LBB2:
 228:App/Src/minicheetah_motor.c ****         uint8_t rx_data[NUM_OF_CAN_RX_BYTES];
 1046              		.loc 1 228 9 is_stmt 1 view .LVU278
 229:App/Src/minicheetah_motor.c ****         if(HAL_CAN_GetRxMessage(motor[m].hcan_ptr, CAN_RX_FIFO0, &motor[m].canRx.header, rx_data) =
 1047              		.loc 1 229 9 view .LVU279
 229:App/Src/minicheetah_motor.c ****         if(HAL_CAN_GetRxMessage(motor[m].hcan_ptr, CAN_RX_FIFO0, &motor[m].canRx.header, rx_data) =
 1048              		.loc 1 229 12 is_stmt 0 view .LVU280
 1049 0050 2C4A     		ldr	r2, .L54
 1050 0052 EC23     		movs	r3, #236
 1051 0054 05FB03F3 		mul	r3, r5, r3
 1052 0058 03F18001 		add	r1, r3, #128
 1053 005c 6B46     		mov	r3, sp
 1054 005e 0A44     		add	r2, r2, r1
 1055 0060 0021     		movs	r1, #0
 1056 0062 606F     		ldr	r0, [r4, #116]
 1057 0064 FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 1058              	.LVL84:
 229:App/Src/minicheetah_motor.c ****         if(HAL_CAN_GetRxMessage(motor[m].hcan_ptr, CAN_RX_FIFO0, &motor[m].canRx.header, rx_data) =
 1059              		.loc 1 229 11 view .LVU281
 1060 0068 28B9     		cbnz	r0, .L48
 229:App/Src/minicheetah_motor.c ****         if(HAL_CAN_GetRxMessage(motor[m].hcan_ptr, CAN_RX_FIFO0, &motor[m].canRx.header, rx_data) =
 1061              		.loc 1 229 119 discriminator 1 view .LVU282
 1062 006a 9DF80020 		ldrb	r2, [sp]	@ zero_extendqisi2
ARM GAS  /tmp/ccYfoX6L.s 			page 30


 229:App/Src/minicheetah_motor.c ****         if(HAL_CAN_GetRxMessage(motor[m].hcan_ptr, CAN_RX_FIFO0, &motor[m].canRx.header, rx_data) =
 1063              		.loc 1 229 134 discriminator 1 view .LVU283
 1064 006e 254B     		ldr	r3, .L54
 1065 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 229:App/Src/minicheetah_motor.c ****         if(HAL_CAN_GetRxMessage(motor[m].hcan_ptr, CAN_RX_FIFO0, &motor[m].canRx.header, rx_data) =
 1066              		.loc 1 229 109 discriminator 1 view .LVU284
 1067 0072 9A42     		cmp	r2, r3
 1068 0074 1DD0     		beq	.L53
 1069              	.L48:
 252:App/Src/minicheetah_motor.c ****         else if (motor[m].hcan_ptr->ErrorCode != HAL_ERROR)
 1070              		.loc 1 252 14 is_stmt 1 view .LVU285
 252:App/Src/minicheetah_motor.c ****         else if (motor[m].hcan_ptr->ErrorCode != HAL_ERROR)
 1071              		.loc 1 252 26 is_stmt 0 view .LVU286
 1072 0076 234B     		ldr	r3, .L54
 1073 0078 EC22     		movs	r2, #236
 1074 007a 02FB0533 		mla	r3, r2, r5, r3
 1075 007e 5B6F     		ldr	r3, [r3, #116]
 252:App/Src/minicheetah_motor.c ****         else if (motor[m].hcan_ptr->ErrorCode != HAL_ERROR)
 1076              		.loc 1 252 35 view .LVU287
 1077 0080 5B6A     		ldr	r3, [r3, #36]
 252:App/Src/minicheetah_motor.c ****         else if (motor[m].hcan_ptr->ErrorCode != HAL_ERROR)
 1078              		.loc 1 252 17 view .LVU288
 1079 0082 012B     		cmp	r3, #1
 1080 0084 E2D0     		beq	.L46
 255:App/Src/minicheetah_motor.c ****             motor[m].noResp_counter ++;
 1081              		.loc 1 255 13 is_stmt 1 view .LVU289
 255:App/Src/minicheetah_motor.c ****             motor[m].noResp_counter ++;
 1082              		.loc 1 255 21 is_stmt 0 view .LVU290
 1083 0086 1F4A     		ldr	r2, .L54
 1084 0088 EC23     		movs	r3, #236
 1085 008a 03FB0522 		mla	r2, r3, r5, r2
 1086 008e 92F8E830 		ldrb	r3, [r2, #232]	@ zero_extendqisi2
 255:App/Src/minicheetah_motor.c ****             motor[m].noResp_counter ++;
 1087              		.loc 1 255 37 view .LVU291
 1088 0092 0133     		adds	r3, r3, #1
 1089 0094 DBB2     		uxtb	r3, r3
 1090 0096 82F8E830 		strb	r3, [r2, #232]
 258:App/Src/minicheetah_motor.c ****             if(motor[m].noResp_counter > MAX_MOTOR_NO_RESPONSE_COUNT)
 1091              		.loc 1 258 13 is_stmt 1 view .LVU292
 258:App/Src/minicheetah_motor.c ****             if(motor[m].noResp_counter > MAX_MOTOR_NO_RESPONSE_COUNT)
 1092              		.loc 1 258 15 is_stmt 0 view .LVU293
 1093 009a 052B     		cmp	r3, #5
 1094 009c D6D9     		bls	.L46
 260:App/Src/minicheetah_motor.c ****                 motor[m].error_code |= MOTOR_ERROR_OFFLINE; /*!< Set motor offline error */
 1095              		.loc 1 260 17 is_stmt 1 view .LVU294
 260:App/Src/minicheetah_motor.c ****                 motor[m].error_code |= MOTOR_ERROR_OFFLINE; /*!< Set motor offline error */
 1096              		.loc 1 260 37 is_stmt 0 view .LVU295
 1097 009e B2F87230 		ldrh	r3, [r2, #114]
 1098 00a2 43F00803 		orr	r3, r3, #8
 1099 00a6 A2F87230 		strh	r3, [r2, #114]	@ movhi
 261:App/Src/minicheetah_motor.c ****                 motor[m].state = MOTOR_ERROR;
 1100              		.loc 1 261 17 is_stmt 1 view .LVU296
 261:App/Src/minicheetah_motor.c ****                 motor[m].state = MOTOR_ERROR;
 1101              		.loc 1 261 32 is_stmt 0 view .LVU297
 1102 00aa 0323     		movs	r3, #3
 1103 00ac 82F87130 		strb	r3, [r2, #113]
 1104 00b0 CCE7     		b	.L46
ARM GAS  /tmp/ccYfoX6L.s 			page 31


 1105              	.L53:
 232:App/Src/minicheetah_motor.c ****             memcpy(motor[m].canRx.data, rx_data, NUM_OF_CAN_RX_BYTES);
 1106              		.loc 1 232 13 is_stmt 1 view .LVU298
 1107 00b2 144C     		ldr	r4, .L54
 1108 00b4 EC23     		movs	r3, #236
 1109 00b6 03FB0544 		mla	r4, r3, r5, r4
 1110 00ba 02AB     		add	r3, sp, #8
 1111 00bc 13E90300 		ldmdb	r3, {r0, r1}
 1112 00c0 A067     		str	r0, [r4, #120]
 1113 00c2 A4F87C10 		strh	r1, [r4, #124]	@ movhi
 235:App/Src/minicheetah_motor.c ****             _unpack_canRx(m);
 1114              		.loc 1 235 13 view .LVU299
 1115 00c6 2846     		mov	r0, r5
 1116 00c8 FFF7FEFF 		bl	_unpack_canRx
 1117              	.LVL85:
 238:App/Src/minicheetah_motor.c ****             motor[m].noResp_counter = 0;
 1118              		.loc 1 238 13 view .LVU300
 238:App/Src/minicheetah_motor.c ****             motor[m].noResp_counter = 0;
 1119              		.loc 1 238 37 is_stmt 0 view .LVU301
 1120 00cc 0023     		movs	r3, #0
 1121 00ce 84F8E830 		strb	r3, [r4, #232]
 241:App/Src/minicheetah_motor.c ****             motor[m].error_code &= ~MOTOR_ERROR_OFFLINE; /*!< Reset motor offline error */
 1122              		.loc 1 241 13 is_stmt 1 view .LVU302
 241:App/Src/minicheetah_motor.c ****             motor[m].error_code &= ~MOTOR_ERROR_OFFLINE; /*!< Reset motor offline error */
 1123              		.loc 1 241 33 is_stmt 0 view .LVU303
 1124 00d2 B4F87230 		ldrh	r3, [r4, #114]
 1125 00d6 23F00803 		bic	r3, r3, #8
 1126 00da 9BB2     		uxth	r3, r3
 1127 00dc A4F87230 		strh	r3, [r4, #114]	@ movhi
 242:App/Src/minicheetah_motor.c ****             motor[m].error_code &= ~MOTOR_ERROR_HAL_CAN; /*!< Reset motor HAL_CAN error */
 1128              		.loc 1 242 13 is_stmt 1 view .LVU304
 242:App/Src/minicheetah_motor.c ****             motor[m].error_code &= ~MOTOR_ERROR_HAL_CAN; /*!< Reset motor HAL_CAN error */
 1129              		.loc 1 242 33 is_stmt 0 view .LVU305
 1130 00e0 23F00403 		bic	r3, r3, #4
 1131 00e4 A4F87230 		strh	r3, [r4, #114]	@ movhi
 245:App/Src/minicheetah_motor.c ****             if(motor[m].state != MOTOR_ENABLED && !_is_motor_error(m, MOTOR_ERROR_NOT_INITIALIZED))
 1132              		.loc 1 245 13 is_stmt 1 view .LVU306
 245:App/Src/minicheetah_motor.c ****             if(motor[m].state != MOTOR_ENABLED && !_is_motor_error(m, MOTOR_ERROR_NOT_INITIALIZED))
 1133              		.loc 1 245 24 is_stmt 0 view .LVU307
 1134 00e8 94F87130 		ldrb	r3, [r4, #113]	@ zero_extendqisi2
 245:App/Src/minicheetah_motor.c ****             if(motor[m].state != MOTOR_ENABLED && !_is_motor_error(m, MOTOR_ERROR_NOT_INITIALIZED))
 1135              		.loc 1 245 15 view .LVU308
 1136 00ec 022B     		cmp	r3, #2
 1137 00ee ADD0     		beq	.L46
 245:App/Src/minicheetah_motor.c ****             if(motor[m].state != MOTOR_ENABLED && !_is_motor_error(m, MOTOR_ERROR_NOT_INITIALIZED))
 1138              		.loc 1 245 52 discriminator 1 view .LVU309
 1139 00f0 0121     		movs	r1, #1
 1140 00f2 2846     		mov	r0, r5
 1141 00f4 FFF7FEFF 		bl	_is_motor_error
 1142              	.LVL86:
 245:App/Src/minicheetah_motor.c ****             if(motor[m].state != MOTOR_ENABLED && !_is_motor_error(m, MOTOR_ERROR_NOT_INITIALIZED))
 1143              		.loc 1 245 48 discriminator 1 view .LVU310
 1144 00f8 0028     		cmp	r0, #0
 1145 00fa A7D1     		bne	.L46
 247:App/Src/minicheetah_motor.c ****                 motor[m].state = MOTOR_READY; /*!< Reset motor error state */
 1146              		.loc 1 247 17 is_stmt 1 view .LVU311
 247:App/Src/minicheetah_motor.c ****                 motor[m].state = MOTOR_READY; /*!< Reset motor error state */
ARM GAS  /tmp/ccYfoX6L.s 			page 32


 1147              		.loc 1 247 32 is_stmt 0 view .LVU312
 1148 00fc 0023     		movs	r3, #0
 1149 00fe 84F87130 		strb	r3, [r4, #113]
 1150 0102 A3E7     		b	.L46
 1151              	.L55:
 1152              		.align	2
 1153              	.L54:
 1154 0104 00000000 		.word	.LANCHOR0
 1155              	.LBE2:
 1156              		.cfi_endproc
 1157              	.LFE143:
 1159              		.section	.text.MOTOR_enable,"ax",%progbits
 1160              		.align	1
 1161              		.global	MOTOR_enable
 1162              		.syntax unified
 1163              		.thumb
 1164              		.thumb_func
 1166              	MOTOR_enable:
 1167              	.LVL87:
 1168              	.LFB144:
 287:App/Src/minicheetah_motor.c **** {
 1169              		.loc 1 287 1 is_stmt 1 view -0
 1170              		.cfi_startproc
 1171              		@ args = 0, pretend = 0, frame = 0
 1172              		@ frame_needed = 0, uses_anonymous_args = 0
 287:App/Src/minicheetah_motor.c **** {
 1173              		.loc 1 287 1 is_stmt 0 view .LVU314
 1174 0000 38B5     		push	{r3, r4, r5, lr}
 1175              	.LCFI11:
 1176              		.cfi_def_cfa_offset 16
 1177              		.cfi_offset 3, -16
 1178              		.cfi_offset 4, -12
 1179              		.cfi_offset 5, -8
 1180              		.cfi_offset 14, -4
 1181 0002 0446     		mov	r4, r0
 289:App/Src/minicheetah_motor.c ****     if(!_is_motor_error(m, 0b00001100000U))
 1182              		.loc 1 289 5 is_stmt 1 view .LVU315
 289:App/Src/minicheetah_motor.c ****     if(!_is_motor_error(m, 0b00001100000U))
 1183              		.loc 1 289 9 is_stmt 0 view .LVU316
 1184 0004 6021     		movs	r1, #96
 1185 0006 FFF7FEFF 		bl	_is_motor_error
 1186              	.LVL88:
 289:App/Src/minicheetah_motor.c ****     if(!_is_motor_error(m, 0b00001100000U))
 1187              		.loc 1 289 7 view .LVU317
 1188 000a 00B1     		cbz	r0, .L60
 1189              	.L56:
 311:App/Src/minicheetah_motor.c **** }
 1190              		.loc 1 311 1 view .LVU318
 1191 000c 38BD     		pop	{r3, r4, r5, pc}
 1192              	.L60:
 292:App/Src/minicheetah_motor.c ****         memcpy(motor[m].canTx.data, motor_enable_cmd, sizeof(motor_enable_cmd));
 1193              		.loc 1 292 9 is_stmt 1 view .LVU319
 1194 000e 144D     		ldr	r5, .L61
 1195 0010 EC23     		movs	r3, #236
 1196 0012 03FB0455 		mla	r5, r3, r4, r5
 1197 0016 134A     		ldr	r2, .L61+4
 1198 0018 05F1C403 		add	r3, r5, #196
ARM GAS  /tmp/ccYfoX6L.s 			page 33


 1199 001c 92E80300 		ldm	r2, {r0, r1}
 1200 0020 83E80300 		stm	r3, {r0, r1}
 295:App/Src/minicheetah_motor.c ****         MOTOR_sendTxGetRx(m);
 1201              		.loc 1 295 9 view .LVU320
 1202 0024 2046     		mov	r0, r4
 1203 0026 FFF7FEFF 		bl	MOTOR_sendTxGetRx
 1204              	.LVL89:
 298:App/Src/minicheetah_motor.c ****         if(motor[m].noResp_counter == 0){
 1205              		.loc 1 298 9 view .LVU321
 298:App/Src/minicheetah_motor.c ****         if(motor[m].noResp_counter == 0){
 1206              		.loc 1 298 20 is_stmt 0 view .LVU322
 1207 002a 95F8E830 		ldrb	r3, [r5, #232]	@ zero_extendqisi2
 298:App/Src/minicheetah_motor.c ****         if(motor[m].noResp_counter == 0){
 1208              		.loc 1 298 11 view .LVU323
 1209 002e 4BB9     		cbnz	r3, .L58
 299:App/Src/minicheetah_motor.c ****             motor[m].error_code &= ~MOTOR_ERROR_EN; /*!< reset */
 1210              		.loc 1 299 13 is_stmt 1 view .LVU324
 299:App/Src/minicheetah_motor.c ****             motor[m].error_code &= ~MOTOR_ERROR_EN; /*!< reset */
 1211              		.loc 1 299 33 is_stmt 0 view .LVU325
 1212 0030 B5F87230 		ldrh	r3, [r5, #114]
 1213 0034 23F08003 		bic	r3, r3, #128
 1214 0038 A5F87230 		strh	r3, [r5, #114]	@ movhi
 300:App/Src/minicheetah_motor.c ****             motor[m].state = MOTOR_ENABLED;
 1215              		.loc 1 300 13 is_stmt 1 view .LVU326
 300:App/Src/minicheetah_motor.c ****             motor[m].state = MOTOR_ENABLED;
 1216              		.loc 1 300 28 is_stmt 0 view .LVU327
 1217 003c 0223     		movs	r3, #2
 1218 003e 85F87130 		strb	r3, [r5, #113]
 1219 0042 E3E7     		b	.L56
 1220              	.L58:
 305:App/Src/minicheetah_motor.c ****             motor[m].error_code |= MOTOR_ERROR_EN; /*!< set `enbale error` bit of the error code*/
 1221              		.loc 1 305 13 is_stmt 1 view .LVU328
 305:App/Src/minicheetah_motor.c ****             motor[m].error_code |= MOTOR_ERROR_EN; /*!< set `enbale error` bit of the error code*/
 1222              		.loc 1 305 33 is_stmt 0 view .LVU329
 1223 0044 0648     		ldr	r0, .L61
 1224 0046 EC23     		movs	r3, #236
 1225 0048 03FB0400 		mla	r0, r3, r4, r0
 1226 004c B0F87230 		ldrh	r3, [r0, #114]
 1227 0050 43F08003 		orr	r3, r3, #128
 1228 0054 A0F87230 		strh	r3, [r0, #114]	@ movhi
 306:App/Src/minicheetah_motor.c ****             motor[m].state = MOTOR_ERROR;
 1229              		.loc 1 306 13 is_stmt 1 view .LVU330
 306:App/Src/minicheetah_motor.c ****             motor[m].state = MOTOR_ERROR;
 1230              		.loc 1 306 28 is_stmt 0 view .LVU331
 1231 0058 0323     		movs	r3, #3
 1232 005a 80F87130 		strb	r3, [r0, #113]
 311:App/Src/minicheetah_motor.c **** }
 1233              		.loc 1 311 1 view .LVU332
 1234 005e D5E7     		b	.L56
 1235              	.L62:
 1236              		.align	2
 1237              	.L61:
 1238 0060 00000000 		.word	.LANCHOR0
 1239 0064 00000000 		.word	.LANCHOR1
 1240              		.cfi_endproc
 1241              	.LFE144:
 1243              		.section	.text.MOTOR_disable,"ax",%progbits
ARM GAS  /tmp/ccYfoX6L.s 			page 34


 1244              		.align	1
 1245              		.global	MOTOR_disable
 1246              		.syntax unified
 1247              		.thumb
 1248              		.thumb_func
 1250              	MOTOR_disable:
 1251              	.LVL90:
 1252              	.LFB145:
 319:App/Src/minicheetah_motor.c **** {
 1253              		.loc 1 319 1 is_stmt 1 view -0
 1254              		.cfi_startproc
 1255              		@ args = 0, pretend = 0, frame = 0
 1256              		@ frame_needed = 0, uses_anonymous_args = 0
 319:App/Src/minicheetah_motor.c **** {
 1257              		.loc 1 319 1 is_stmt 0 view .LVU334
 1258 0000 38B5     		push	{r3, r4, r5, lr}
 1259              	.LCFI12:
 1260              		.cfi_def_cfa_offset 16
 1261              		.cfi_offset 3, -16
 1262              		.cfi_offset 4, -12
 1263              		.cfi_offset 5, -8
 1264              		.cfi_offset 14, -4
 1265 0002 0446     		mov	r4, r0
 322:App/Src/minicheetah_motor.c ****     memcpy(motor[m].canTx.data, motor_disable_cmd, sizeof(motor_disable_cmd));
 1266              		.loc 1 322 5 is_stmt 1 view .LVU335
 1267 0004 144D     		ldr	r5, .L67
 1268 0006 EC23     		movs	r3, #236
 1269 0008 03FB0055 		mla	r5, r3, r0, r5
 1270 000c 134A     		ldr	r2, .L67+4
 1271 000e 05F1C403 		add	r3, r5, #196
 1272 0012 92E80300 		ldm	r2, {r0, r1}
 1273              	.LVL91:
 322:App/Src/minicheetah_motor.c ****     memcpy(motor[m].canTx.data, motor_disable_cmd, sizeof(motor_disable_cmd));
 1274              		.loc 1 322 5 is_stmt 0 view .LVU336
 1275 0016 83E80300 		stm	r3, {r0, r1}
 325:App/Src/minicheetah_motor.c ****     MOTOR_sendTxGetRx(m);
 1276              		.loc 1 325 5 is_stmt 1 view .LVU337
 1277 001a 2046     		mov	r0, r4
 1278 001c FFF7FEFF 		bl	MOTOR_sendTxGetRx
 1279              	.LVL92:
 328:App/Src/minicheetah_motor.c ****     if(motor[m].noResp_counter == 0){
 1280              		.loc 1 328 5 view .LVU338
 328:App/Src/minicheetah_motor.c ****     if(motor[m].noResp_counter == 0){
 1281              		.loc 1 328 16 is_stmt 0 view .LVU339
 1282 0020 95F8E830 		ldrb	r3, [r5, #232]	@ zero_extendqisi2
 328:App/Src/minicheetah_motor.c ****     if(motor[m].noResp_counter == 0){
 1283              		.loc 1 328 7 view .LVU340
 1284 0024 4BB9     		cbnz	r3, .L64
 329:App/Src/minicheetah_motor.c ****         motor[m].error_code &= ~MOTOR_ERROR_DIS;
 1285              		.loc 1 329 9 is_stmt 1 view .LVU341
 329:App/Src/minicheetah_motor.c ****         motor[m].error_code &= ~MOTOR_ERROR_DIS;
 1286              		.loc 1 329 29 is_stmt 0 view .LVU342
 1287 0026 B5F87230 		ldrh	r3, [r5, #114]
 1288 002a 23F48073 		bic	r3, r3, #256
 1289 002e A5F87230 		strh	r3, [r5, #114]	@ movhi
 330:App/Src/minicheetah_motor.c ****         motor[m].state = MOTOR_READY;
 1290              		.loc 1 330 9 is_stmt 1 view .LVU343
ARM GAS  /tmp/ccYfoX6L.s 			page 35


 330:App/Src/minicheetah_motor.c ****         motor[m].state = MOTOR_READY;
 1291              		.loc 1 330 24 is_stmt 0 view .LVU344
 1292 0032 0023     		movs	r3, #0
 1293 0034 85F87130 		strb	r3, [r5, #113]
 1294              	.L63:
 339:App/Src/minicheetah_motor.c **** }
 1295              		.loc 1 339 1 view .LVU345
 1296 0038 38BD     		pop	{r3, r4, r5, pc}
 1297              	.L64:
 335:App/Src/minicheetah_motor.c ****         motor[m].error_code |= MOTOR_ERROR_DIS;
 1298              		.loc 1 335 9 is_stmt 1 view .LVU346
 335:App/Src/minicheetah_motor.c ****         motor[m].error_code |= MOTOR_ERROR_DIS;
 1299              		.loc 1 335 29 is_stmt 0 view .LVU347
 1300 003a 0748     		ldr	r0, .L67
 1301 003c EC23     		movs	r3, #236
 1302 003e 03FB0404 		mla	r4, r3, r4, r0
 1303 0042 B4F87230 		ldrh	r3, [r4, #114]
 1304 0046 43F48073 		orr	r3, r3, #256
 1305 004a A4F87230 		strh	r3, [r4, #114]	@ movhi
 336:App/Src/minicheetah_motor.c ****         motor[m].state = MOTOR_ERROR;
 1306              		.loc 1 336 9 is_stmt 1 view .LVU348
 336:App/Src/minicheetah_motor.c ****         motor[m].state = MOTOR_ERROR;
 1307              		.loc 1 336 24 is_stmt 0 view .LVU349
 1308 004e 0323     		movs	r3, #3
 1309 0050 84F87130 		strb	r3, [r4, #113]
 339:App/Src/minicheetah_motor.c **** }
 1310              		.loc 1 339 1 view .LVU350
 1311 0054 F0E7     		b	.L63
 1312              	.L68:
 1313 0056 00BF     		.align	2
 1314              	.L67:
 1315 0058 00000000 		.word	.LANCHOR0
 1316 005c 00000000 		.word	.LANCHOR2
 1317              		.cfi_endproc
 1318              	.LFE145:
 1320              		.section	.text.MOTOR_setZero,"ax",%progbits
 1321              		.align	1
 1322              		.global	MOTOR_setZero
 1323              		.syntax unified
 1324              		.thumb
 1325              		.thumb_func
 1327              	MOTOR_setZero:
 1328              	.LVL93:
 1329              	.LFB146:
 350:App/Src/minicheetah_motor.c **** {
 1330              		.loc 1 350 1 is_stmt 1 view -0
 1331              		.cfi_startproc
 1332              		@ args = 0, pretend = 0, frame = 0
 1333              		@ frame_needed = 0, uses_anonymous_args = 0
 350:App/Src/minicheetah_motor.c **** {
 1334              		.loc 1 350 1 is_stmt 0 view .LVU352
 1335 0000 38B5     		push	{r3, r4, r5, lr}
 1336              	.LCFI13:
 1337              		.cfi_def_cfa_offset 16
 1338              		.cfi_offset 3, -16
 1339              		.cfi_offset 4, -12
 1340              		.cfi_offset 5, -8
ARM GAS  /tmp/ccYfoX6L.s 			page 36


 1341              		.cfi_offset 14, -4
 1342 0002 0446     		mov	r4, r0
 352:App/Src/minicheetah_motor.c ****     memcpy(motor[m].canTx.data, motor_setzero_cmd, sizeof(motor_setzero_cmd));
 1343              		.loc 1 352 5 is_stmt 1 view .LVU353
 1344 0004 0B4D     		ldr	r5, .L72
 1345 0006 EC23     		movs	r3, #236
 1346 0008 03FB0055 		mla	r5, r3, r0, r5
 1347 000c 0A4A     		ldr	r2, .L72+4
 1348 000e 05F1C403 		add	r3, r5, #196
 1349 0012 92E80300 		ldm	r2, {r0, r1}
 1350              	.LVL94:
 352:App/Src/minicheetah_motor.c ****     memcpy(motor[m].canTx.data, motor_setzero_cmd, sizeof(motor_setzero_cmd));
 1351              		.loc 1 352 5 is_stmt 0 view .LVU354
 1352 0016 83E80300 		stm	r3, {r0, r1}
 355:App/Src/minicheetah_motor.c ****     MOTOR_sendTxGetRx(m);
 1353              		.loc 1 355 5 is_stmt 1 view .LVU355
 1354 001a 2046     		mov	r0, r4
 1355 001c FFF7FEFF 		bl	MOTOR_sendTxGetRx
 1356              	.LVL95:
 358:App/Src/minicheetah_motor.c ****     if(motor[m].noResp_counter != 0)
 1357              		.loc 1 358 5 view .LVU356
 358:App/Src/minicheetah_motor.c ****     if(motor[m].noResp_counter != 0)
 1358              		.loc 1 358 16 is_stmt 0 view .LVU357
 1359 0020 95F8E830 		ldrb	r3, [r5, #232]	@ zero_extendqisi2
 358:App/Src/minicheetah_motor.c ****     if(motor[m].noResp_counter != 0)
 1360              		.loc 1 358 7 view .LVU358
 1361 0024 2BB1     		cbz	r3, .L69
 360:App/Src/minicheetah_motor.c ****         motor[m].error_code |= MOTOR_ERROR_SZ;
 1362              		.loc 1 360 9 is_stmt 1 view .LVU359
 360:App/Src/minicheetah_motor.c ****         motor[m].error_code |= MOTOR_ERROR_SZ;
 1363              		.loc 1 360 29 is_stmt 0 view .LVU360
 1364 0026 B5F87230 		ldrh	r3, [r5, #114]
 1365 002a 43F40073 		orr	r3, r3, #512
 1366 002e A5F87230 		strh	r3, [r5, #114]	@ movhi
 1367              	.L69:
 362:App/Src/minicheetah_motor.c **** }
 1368              		.loc 1 362 1 view .LVU361
 1369 0032 38BD     		pop	{r3, r4, r5, pc}
 1370              	.L73:
 1371              		.align	2
 1372              	.L72:
 1373 0034 00000000 		.word	.LANCHOR0
 1374 0038 00000000 		.word	.LANCHOR3
 1375              		.cfi_endproc
 1376              	.LFE146:
 1378              		.section	.text.MOTOR_sendHeatbeat,"ax",%progbits
 1379              		.align	1
 1380              		.global	MOTOR_sendHeatbeat
 1381              		.syntax unified
 1382              		.thumb
 1383              		.thumb_func
 1385              	MOTOR_sendHeatbeat:
 1386              	.LVL96:
 1387              	.LFB142:
 188:App/Src/minicheetah_motor.c **** {
 1388              		.loc 1 188 1 is_stmt 1 view -0
 1389              		.cfi_startproc
ARM GAS  /tmp/ccYfoX6L.s 			page 37


 1390              		@ args = 0, pretend = 0, frame = 0
 1391              		@ frame_needed = 0, uses_anonymous_args = 0
 188:App/Src/minicheetah_motor.c **** {
 1392              		.loc 1 188 1 is_stmt 0 view .LVU363
 1393 0000 10B5     		push	{r4, lr}
 1394              	.LCFI14:
 1395              		.cfi_def_cfa_offset 8
 1396              		.cfi_offset 4, -8
 1397              		.cfi_offset 14, -4
 1398 0002 0446     		mov	r4, r0
 190:App/Src/minicheetah_motor.c ****     memcpy(motor[m].canTx.data, motor_heartbeat_cmd, sizeof(motor_heartbeat_cmd));
 1399              		.loc 1 190 5 is_stmt 1 view .LVU364
 1400 0004 174B     		ldr	r3, .L77
 1401 0006 EC22     		movs	r2, #236
 1402 0008 02FB0033 		mla	r3, r2, r0, r3
 1403 000c 164A     		ldr	r2, .L77+4
 1404 000e C433     		adds	r3, r3, #196
 1405 0010 92E80300 		ldm	r2, {r0, r1}
 1406              	.LVL97:
 190:App/Src/minicheetah_motor.c ****     memcpy(motor[m].canTx.data, motor_heartbeat_cmd, sizeof(motor_heartbeat_cmd));
 1407              		.loc 1 190 5 is_stmt 0 view .LVU365
 1408 0014 83E80300 		stm	r3, {r0, r1}
 193:App/Src/minicheetah_motor.c ****     MOTOR_sendTxGetRx(m);
 1409              		.loc 1 193 5 is_stmt 1 view .LVU366
 1410 0018 2046     		mov	r0, r4
 1411 001a FFF7FEFF 		bl	MOTOR_sendTxGetRx
 1412              	.LVL98:
 196:App/Src/minicheetah_motor.c ****     _unpack_canRx(m);
 1413              		.loc 1 196 5 view .LVU367
 1414 001e 2046     		mov	r0, r4
 1415 0020 FFF7FEFF 		bl	_unpack_canRx
 1416              	.LVL99:
 200:App/Src/minicheetah_motor.c ****     if(!_is_motor_error(m, MOTOR_ERROR_OFFLINE))
 1417              		.loc 1 200 5 view .LVU368
 200:App/Src/minicheetah_motor.c ****     if(!_is_motor_error(m, MOTOR_ERROR_OFFLINE))
 1418              		.loc 1 200 9 is_stmt 0 view .LVU369
 1419 0024 0821     		movs	r1, #8
 1420 0026 2046     		mov	r0, r4
 1421 0028 FFF7FEFF 		bl	_is_motor_error
 1422              	.LVL100:
 200:App/Src/minicheetah_motor.c ****     if(!_is_motor_error(m, MOTOR_ERROR_OFFLINE))
 1423              		.loc 1 200 7 view .LVU370
 1424 002c C0B9     		cbnz	r0, .L74
 204:App/Src/minicheetah_motor.c ****         motor[m].error_code &= ~ MOTOR_ERROR_NOT_READY;     /*!< Reset motor is not ready error */
 1425              		.loc 1 204 9 is_stmt 1 view .LVU371
 204:App/Src/minicheetah_motor.c ****         motor[m].error_code &= ~ MOTOR_ERROR_NOT_READY;     /*!< Reset motor is not ready error */
 1426              		.loc 1 204 29 is_stmt 0 view .LVU372
 1427 002e 0D48     		ldr	r0, .L77
 1428 0030 EC23     		movs	r3, #236
 1429 0032 03FB0404 		mla	r4, r3, r4, r0
 1430 0036 B4F87230 		ldrh	r3, [r4, #114]
 1431 003a 23F48063 		bic	r3, r3, #1024
 1432 003e 9BB2     		uxth	r3, r3
 1433 0040 A4F87230 		strh	r3, [r4, #114]	@ movhi
 205:App/Src/minicheetah_motor.c ****         motor[m].error_code &= ~ MOTOR_ERROR_OOR;           /* Reset motor out of range error */
 1434              		.loc 1 205 9 is_stmt 1 view .LVU373
 205:App/Src/minicheetah_motor.c ****         motor[m].error_code &= ~ MOTOR_ERROR_OOR;           /* Reset motor out of range error */
ARM GAS  /tmp/ccYfoX6L.s 			page 38


 1435              		.loc 1 205 29 is_stmt 0 view .LVU374
 1436 0044 23F01003 		bic	r3, r3, #16
 1437 0048 9BB2     		uxth	r3, r3
 1438 004a A4F87230 		strh	r3, [r4, #114]	@ movhi
 206:App/Src/minicheetah_motor.c ****         motor[m].error_code &= ~ MOTOR_ERROR_OH;            /* Reset motor over-heated error */
 1439              		.loc 1 206 9 is_stmt 1 view .LVU375
 206:App/Src/minicheetah_motor.c ****         motor[m].error_code &= ~ MOTOR_ERROR_OH;            /* Reset motor over-heated error */
 1440              		.loc 1 206 29 is_stmt 0 view .LVU376
 1441 004e 23F02003 		bic	r3, r3, #32
 1442 0052 9BB2     		uxth	r3, r3
 1443 0054 A4F87230 		strh	r3, [r4, #114]	@ movhi
 207:App/Src/minicheetah_motor.c ****         motor[m].error_code &= ~ MOTOR_ERROR_OC;            /* Reset motor over-current error */
 1444              		.loc 1 207 9 is_stmt 1 view .LVU377
 207:App/Src/minicheetah_motor.c ****         motor[m].error_code &= ~ MOTOR_ERROR_OC;            /* Reset motor over-current error */
 1445              		.loc 1 207 29 is_stmt 0 view .LVU378
 1446 0058 23F04003 		bic	r3, r3, #64
 1447 005c A4F87230 		strh	r3, [r4, #114]	@ movhi
 1448              	.L74:
 209:App/Src/minicheetah_motor.c **** }
 1449              		.loc 1 209 1 view .LVU379
 1450 0060 10BD     		pop	{r4, pc}
 1451              	.L78:
 1452 0062 00BF     		.align	2
 1453              	.L77:
 1454 0064 00000000 		.word	.LANCHOR0
 1455 0068 00000000 		.word	.LANCHOR4
 1456              		.cfi_endproc
 1457              	.LFE142:
 1459              		.global	motor_state
 1460              		.global	motor_error_code
 1461              		.global	motor_heartbeat_cmd
 1462              		.global	motor_setzero_cmd
 1463              		.global	motor_disable_cmd
 1464              		.global	motor_enable_cmd
 1465              		.global	motor
 1466              		.section	.bss.motor,"aw",%nobits
 1467              		.align	2
 1468              		.set	.LANCHOR0,. + 0
 1471              	motor:
 1472 0000 00000000 		.space	2832
 1472      00000000 
 1472      00000000 
 1472      00000000 
 1472      00000000 
 1473              		.section	.bss.motor_state,"aw",%nobits
 1476              	motor_state:
 1477 0000 00       		.space	1
 1478              		.section	.data.motor_disable_cmd,"aw"
 1479              		.align	2
 1480              		.set	.LANCHOR2,. + 0
 1483              	motor_disable_cmd:
 1484 0000 FFFFFFFF 		.ascii	"\377\377\377\377\377\377\377\375"
 1484      FFFFFFFD 
 1485              		.section	.data.motor_enable_cmd,"aw"
 1486              		.align	2
 1487              		.set	.LANCHOR1,. + 0
 1490              	motor_enable_cmd:
ARM GAS  /tmp/ccYfoX6L.s 			page 39


 1491 0000 FFFFFFFF 		.ascii	"\377\377\377\377\377\377\377\374"
 1491      FFFFFFFC 
 1492              		.section	.data.motor_error_code,"aw"
 1493              		.align	1
 1496              	motor_error_code:
 1497 0000 0700     		.short	7
 1498              		.section	.data.motor_heartbeat_cmd,"aw"
 1499              		.align	2
 1500              		.set	.LANCHOR4,. + 0
 1503              	motor_heartbeat_cmd:
 1504 0000 FFFFFFFF 		.ascii	"\377\377\377\377\377\377\377\377"
 1504      FFFFFFFF 
 1505              		.section	.data.motor_setzero_cmd,"aw"
 1506              		.align	2
 1507              		.set	.LANCHOR3,. + 0
 1510              	motor_setzero_cmd:
 1511 0000 FFFFFFFF 		.ascii	"\377\377\377\377\377\377\377\376"
 1511      FFFFFFFE 
 1512              		.text
 1513              	.Letext0:
 1514              		.file 2 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 1515              		.file 3 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 1516              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1517              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1518              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1519              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 1520              		.file 8 "App/Inc/motor_defs.h"
 1521              		.file 9 "App/Inc/motor_typedefs.h"
 1522              		.file 10 "App/Inc/minicheetah_motor.h"
 1523              		.file 11 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcutils
ARM GAS  /tmp/ccYfoX6L.s 			page 40


DEFINED SYMBOLS
                            *ABS*:0000000000000000 minicheetah_motor.c
     /tmp/ccYfoX6L.s:20     .text.MOTOR_initId:0000000000000000 $t
     /tmp/ccYfoX6L.s:26     .text.MOTOR_initId:0000000000000000 MOTOR_initId
     /tmp/ccYfoX6L.s:73     .text.MOTOR_initId:0000000000000030 $d
     /tmp/ccYfoX6L.s:78     .text.MOTOR_initParams:0000000000000000 $t
     /tmp/ccYfoX6L.s:84     .text.MOTOR_initParams:0000000000000000 MOTOR_initParams
     /tmp/ccYfoX6L.s:177    .text.MOTOR_initParams:0000000000000078 $d
     /tmp/ccYfoX6L.s:182    .text.MOTOR_initCtrlLimits:0000000000000000 $t
     /tmp/ccYfoX6L.s:188    .text.MOTOR_initCtrlLimits:0000000000000000 MOTOR_initCtrlLimits
     /tmp/ccYfoX6L.s:257    .text.MOTOR_initCtrlLimits:0000000000000058 $d
     /tmp/ccYfoX6L.s:262    .text.MOTOR_initCANConfig:0000000000000000 $t
     /tmp/ccYfoX6L.s:268    .text.MOTOR_initCANConfig:0000000000000000 MOTOR_initCANConfig
     /tmp/ccYfoX6L.s:414    .text.MOTOR_initCANConfig:00000000000000d8 $d
     /tmp/ccYfoX6L.s:419    .text.MOTOR_startWatchdog:0000000000000000 $t
     /tmp/ccYfoX6L.s:425    .text.MOTOR_startWatchdog:0000000000000000 MOTOR_startWatchdog
     /tmp/ccYfoX6L.s:438    .text._is_motor_error:0000000000000000 $t
     /tmp/ccYfoX6L.s:444    .text._is_motor_error:0000000000000000 _is_motor_error
     /tmp/ccYfoX6L.s:472    .text._is_motor_error:0000000000000018 $d
     /tmp/ccYfoX6L.s:477    .text.fminf:0000000000000000 $t
     /tmp/ccYfoX6L.s:483    .text.fminf:0000000000000000 fminf
     /tmp/ccYfoX6L.s:508    .text.fmaxf:0000000000000000 $t
     /tmp/ccYfoX6L.s:514    .text.fmaxf:0000000000000000 fmaxf
     /tmp/ccYfoX6L.s:539    .text.float2uint:0000000000000000 $t
     /tmp/ccYfoX6L.s:545    .text.float2uint:0000000000000000 float2uint
     /tmp/ccYfoX6L.s:584    .text._pack_cmd:0000000000000000 $t
     /tmp/ccYfoX6L.s:590    .text._pack_cmd:0000000000000000 _pack_cmd
     /tmp/ccYfoX6L.s:832    .text._pack_cmd:0000000000000150 $d
     /tmp/ccYfoX6L.s:837    .text.uint2float:0000000000000000 $t
     /tmp/ccYfoX6L.s:843    .text.uint2float:0000000000000000 uint2float
     /tmp/ccYfoX6L.s:880    .text._unpack_canRx:0000000000000000 $t
     /tmp/ccYfoX6L.s:886    .text._unpack_canRx:0000000000000000 _unpack_canRx
     /tmp/ccYfoX6L.s:970    .text._unpack_canRx:000000000000006c $d
     /tmp/ccYfoX6L.s:975    .text.MOTOR_sendTxGetRx:0000000000000000 $t
     /tmp/ccYfoX6L.s:981    .text.MOTOR_sendTxGetRx:0000000000000000 MOTOR_sendTxGetRx
     /tmp/ccYfoX6L.s:1154   .text.MOTOR_sendTxGetRx:0000000000000104 $d
     /tmp/ccYfoX6L.s:1160   .text.MOTOR_enable:0000000000000000 $t
     /tmp/ccYfoX6L.s:1166   .text.MOTOR_enable:0000000000000000 MOTOR_enable
     /tmp/ccYfoX6L.s:1238   .text.MOTOR_enable:0000000000000060 $d
     /tmp/ccYfoX6L.s:1244   .text.MOTOR_disable:0000000000000000 $t
     /tmp/ccYfoX6L.s:1250   .text.MOTOR_disable:0000000000000000 MOTOR_disable
     /tmp/ccYfoX6L.s:1315   .text.MOTOR_disable:0000000000000058 $d
     /tmp/ccYfoX6L.s:1321   .text.MOTOR_setZero:0000000000000000 $t
     /tmp/ccYfoX6L.s:1327   .text.MOTOR_setZero:0000000000000000 MOTOR_setZero
     /tmp/ccYfoX6L.s:1373   .text.MOTOR_setZero:0000000000000034 $d
     /tmp/ccYfoX6L.s:1379   .text.MOTOR_sendHeatbeat:0000000000000000 $t
     /tmp/ccYfoX6L.s:1385   .text.MOTOR_sendHeatbeat:0000000000000000 MOTOR_sendHeatbeat
     /tmp/ccYfoX6L.s:1454   .text.MOTOR_sendHeatbeat:0000000000000064 $d
     /tmp/ccYfoX6L.s:1476   .bss.motor_state:0000000000000000 motor_state
     /tmp/ccYfoX6L.s:1496   .data.motor_error_code:0000000000000000 motor_error_code
     /tmp/ccYfoX6L.s:1503   .data.motor_heartbeat_cmd:0000000000000000 motor_heartbeat_cmd
     /tmp/ccYfoX6L.s:1510   .data.motor_setzero_cmd:0000000000000000 motor_setzero_cmd
     /tmp/ccYfoX6L.s:1483   .data.motor_disable_cmd:0000000000000000 motor_disable_cmd
     /tmp/ccYfoX6L.s:1490   .data.motor_enable_cmd:0000000000000000 motor_enable_cmd
     /tmp/ccYfoX6L.s:1471   .bss.motor:0000000000000000 motor
     /tmp/ccYfoX6L.s:1467   .bss.motor:0000000000000000 $d
     /tmp/ccYfoX6L.s:1477   .bss.motor_state:0000000000000000 $d
ARM GAS  /tmp/ccYfoX6L.s 			page 41


     /tmp/ccYfoX6L.s:1479   .data.motor_disable_cmd:0000000000000000 $d
     /tmp/ccYfoX6L.s:1486   .data.motor_enable_cmd:0000000000000000 $d
     /tmp/ccYfoX6L.s:1493   .data.motor_error_code:0000000000000000 $d
     /tmp/ccYfoX6L.s:1499   .data.motor_heartbeat_cmd:0000000000000000 $d
     /tmp/ccYfoX6L.s:1506   .data.motor_setzero_cmd:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_CAN_ConfigFilter
HAL_CAN_AddTxMessage
HAL_CAN_GetRxMessage
